{
    "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
    "handler": "Microsoft.Azure.CreateUIDef",
    "version": "0.1.2-preview",
    "parameters": {
        "basics": [ 
			{
                "name": "fsName",
                "type": "Microsoft.Common.TextBox",
                "label": "Virtual Machine name/prefix",
                "toolTip": "The name MGS/MDS and the prefix for the OSS.",
                "defaultValue": "lustre",
                "constraints": {
                    "required": true,
                    "regex": "^[a-z0-9A-Z-]{3,32}$",
                    "validationMessage": "The VM Name must be between 3 and 32 characters long and contain letters, numbers and hyphens only."
                }
            },
            {
                "name": "adminUser",
                "type": "Microsoft.Compute.UserNameTextBox",
                "label": "Username",
                "toolTip": "Admin username for the VMs",
                "osPlatform": "Linux",
                "constraints": {
                    "required": true
                }
            },
            {
                "name": "credentials",
                "type": "Microsoft.Compute.CredentialsCombo",
                "label": {
                    "authenticationType": "Authentication type",
                    "sshPublicKey": "SSH public key"
                },
                "toolTip": {
                    "authenticationType": "Authentication Type for the Virtual Machine",
                    "password": "Password for the Virtual Machine",
                    "sshPublicKey": "SSH Public Key for the Virtual Machine"
                },
                "constraints": {
                    "required": true
                },
                "options": {
                    "hideConfirmation": false,
					"hidePassword": true
                },
                "osPlatform": "Linux"
            },
			{
				"name": "getVnetName",
				"type": "Microsoft.Solutions.ArmApiControl",
				"request": {
					"method": "GET",
					"path": "[concat(subscription().id, '/providers/Microsoft.Network/virtualNetworks?api-version=2021-02-01')]"
				}
			},
			{
				"name": "networking",
				"type": "Microsoft.Common.Section",
				"label": "Networking",
				"elements": [
					{
						"name": "vnet",
						"type": "Microsoft.Common.DropDown",
						"label": "Select existing VNet",
						"toolTip": "Select the VNet from the list.",
						"filter": true,
						"filterPlaceholder": "Filter items ...",
						"multiLine": true,
						"constraints": {
							"allowedValues": "[ map( filter( basics('getVnetName').value, (item) => contains(item.location, location()) ), (item) => parse( concat( '{\"label\":\"', item.name, '\", \"description\":\"', substring( item.id, add(indexOf(item.id, 'resourceGroups/'), 15), sub( indexOf(item.id, '/providers'), add(indexOf(item.id, 'resourceGroups/'), 15) ) ), '\", \"value\":\"', item.id, '\"}' ) ) ) ]"
						},
						"visible": true
					},
					{
						"name": "subnet",
						"type": "Microsoft.Common.DropDown",
						"label": "Select subnet to use",
						"toolTip": "Select the subnet from the list.",
						"filter": true,
						"filterPlaceholder": "Filter items ...",
						"multiLine": true,
						"constraints": {
							"allowedValues": "[ map( first( map( filter( basics('getVnetName').value, (item) => equals(item.id, basics('networking').vnet) ), (item) => item.properties.subnets ) ), (item) => parse( concat( '{\"label\":\"', item.name, '\", \"value\":\"', item.name, '\"}' ) ) ) ]"
						},
						"visible": true
					}
				]
			},
			{
				"name": "proximity",
				"type": "Microsoft.Common.Section",
				"label": "Proximity",
				"elements": [
					{
						"name": "useAvailabilityZone",
						"type": "Microsoft.Common.CheckBox",
						"label": "Use availability zone",
						"toolTip": "Enable checkbox to choose an availability zone."
					},
					{
						"name": "availabilityZone",
						"type": "Microsoft.Common.DropDown",
						"label": "Select the availability zone",
						"defaultValue": "Availability Zone 1",
						"toolTip": "Select the availability zone to use",
						"constraints": {
							"allowedValues": [
								{
									"label": "Availability Zone 1",
									"value": 1
								},
								{
									"label": "Availability Zone 2",
									"value": 2
								},
								{
									"label": "Availability Zone 3",
									"value": 3
								}
							],
							"required": true
						},
						"visible": "[basics('proximity').useAvailabilityZone.value]"
					}
				]
			}
		],
        "steps": [
            {
                "name": "metadata",
                "label": "Metadata",                
                "subLabel": {
                    "preValidation": "Configure your metadata settings",
                    "postValidation": "Done"
                },
                "bladeTitle": "Metadata Settings",
                "elements": [
                    {
                        "name": "mdsSku",
                        "type": "Microsoft.Compute.SizeSelector",
                        "label": "Management/Metadata server size",
                        "toolTip": "The size of virtual machine to provision.",
                        "defaultValue": "Standard_D8s_v3",
                        "recommendedSizes": [
                            "Standard_D8s_v3",
                            "Standard_L8s_v2"
                        ],
                        "osPlatform": "Linux",
                        "count": 1
                    },
					{
						"name": "mdtStorageSku",
						"type": "Microsoft.Common.DropDown",
						"label": "The MDT storage type",
						"defaultValue": "Premium_LRS",
						"toolTip": "Choose the MDT storage tier",
						"multiselect": false,
						"multiLine": false,
						"constraints": {
							"allowedValues": [
								{
									"label": "Ephemeral",
									"description": "Ephemeral storage on the Virtual Machine.",
									"value": "Ephemeral"
								},
								{
									"label": "Premium_LRS",
									"description": "Premium Locally Redundant Storage.",
									"value": "Premium_LRS"
								},
								{
									"label": "StandardSSD_LRS",
									"description": "Standard SSD Locally Redundant Storage.",
									"value": "StandardSSD_LRS"
								},
								{
									"label": "Standard_LRS",
									"description": "Standard Locally Redundant Storage.",
									"value": "Standard_LRS"
								}
							],
							"required": true
						},
						"visible": true
					},
					{
						"name": "mdtDiskSize",
						"type": "Microsoft.Common.DropDown",
						"label": "Managed disk size for MDT",
						"defaultValue": "1 TiB",
						"toolTip": "The size of each attached managed disk",
						"multiselect": false,
						"multiLine": false,
						"constraints": {
							"allowedValues": [
								{ "label": "256 GiB", "value": 256 },
								{ "label": "512 GiB", "value": 512 },
								{ "label": "1 TiB", "value": 1024 },
								{ "label": "2 TiB", "value": 2048 },
								{ "label": "4 TiB", "value": 4095 },
								{ "label": "8 TiB", "value": 8192 },
								{ "label": "16 TiB", "value": 16384 },
								{ "label": "32 TiB", "value": 32767 }
							],
							"required": true
						},
						"visible": "[not(equals(steps('metadata').mdtStorageSku, 'Ephemeral'))]"
					},
					{
						"name": "mdtNumDisks",
						"type": "Microsoft.Common.Slider",
						"label": "The number of disks raided for the MDT",
						"min": 1,
                        "max": 16,
						"defaultValue": 1,
						"toolTip": "Host cache option for the managed disks",
						"constraints": {
							"required": true
						},
						"visible": "[not(equals(steps('metadata').mdtStorageSku, 'Ephemeral'))]"
					},
                    {
                        "name": "mdtCacheOption",
                        "type": "Microsoft.Common.DropDown",
                        "label": "Cache option for MDT devices",
                        "defaultValue": "None",
                        "toolTip": "Host cache option for the managed disks",
						"multiselect": false,
						"multiLine": false,
						"constraints": {
							"allowedValues": [
								{ "label": "None", "value": "None" },
								{ "label": "ReadOnly", "value": "ReadOnly" },
								{ "label": "ReadWrite", "value": "ReadWrite" }
							],
							"required": true
						},
						"visible": "[not(equals(steps('metadata').mdtStorageSku, 'Ephemeral'))]"
                    }
                ]
            },
            {
                "name": "storage",
                "label": "Storage",
                "subLabel": {
                    "preValidation": "Configure your storage settings",
                    "postValidation": "Done"
                },
                "bladeTitle": "Storage Settings",
                "elements": [
                    {
						"name": "ossCount",
						"type": "Microsoft.Common.Slider",
						"label": "Number of OSS VMs",
						"min": 1,
                        "max": 300,
						"defaultValue": 4,
						"toolTip": "Number of OSS VMs",
						"constraints": {
							"required": true
						},
						"visible": true
					},
					{
                        "name": "ossSku",
                        "type": "Microsoft.Compute.SizeSelector",
                        "label": "Object storage server size",
                        "toolTip": "The size of virtual machine to provision.",
                        "defaultValue": "Standard_D48s_v3",
                        "recommendedSizes": [
                            "Standard_D48s_v3",
                            "Standard_L48s_v2"
                        ],
                        "osPlatform": "Linux",
                        "count": 1,
                        "visible": true
                    },
					{
						"name": "ostStorageSku",
						"type": "Microsoft.Common.DropDown",
						"label": "The OST storage type",
						"defaultValue": "Premium_LRS",
						"toolTip": "Choose the OST storage tier",
						"multiselect": false,
						"multiLine": false,
						"constraints": {
							"allowedValues": [
								{
									"label": "Ephemeral",
									"description": "Ephemeral storage on the Virtual Machine.",
									"value": "Ephemeral"
								},
								{
									"label": "Premium_LRS",
									"description": "Premium Locally Redundant Storage.",
									"value": "Premium_LRS"
								},
								{
									"label": "StandardSSD_LRS",
									"description": "Standard SSD Locally Redundant Storage.",
									"value": "StandardSSD_LRS"
								},
								{
									"label": "Standard_LRS",
									"description": "Standard Locally Redundant Storage.",
									"value": "Standard_LRS"
								}
							],
							"required": true
						},
						"visible": true
					},
					{
						"name": "ostDiskSize",
						"type": "Microsoft.Common.DropDown",
						"label": "Managed disk size for OST",
						"defaultValue": "1 TiB",
						"toolTip": "The size of each attached managed disk",
						"multiselect": false,
						"multiLine": false,
						"constraints": {
							"allowedValues": [
								{ "label": "256 GiB", "value": 256 },
								{ "label": "512 GiB", "value": 512 },
								{ "label": "1 TiB", "value": 1024 },
								{ "label": "2 TiB", "value": 2048 },
								{ "label": "4 TiB", "value": 4095 },
								{ "label": "8 TiB", "value": 8192 },
								{ "label": "16 TiB", "value": 16384 },
								{ "label": "32 TiB", "value": 32767 }
							],
							"required": true
						},
						"visible": "[not(equals(steps('storage').ostStorageSku, 'Ephemeral'))]"
					},
					{
						"name": "ostNumDisks",
						"type": "Microsoft.Common.Slider",
						"label": "Number of OST disks",
						"min": 1,
                        "max": 32,
						"defaultValue": 6,
						"toolTip": "Number of OST disks per OSS",
						"constraints": {
							"required": true
						},
						"visible": "[not(equals(steps('storage').ostStorageSku, 'Ephemeral'))]"
					},
                    {
                        "name": "ostCacheOption",
                        "type": "Microsoft.Common.DropDown",
                        "label": "Cache option for OST devices",
                        "defaultValue": "None",
                        "toolTip": "Host cache option for the managed disks",
						"multiselect": false,
						"multiLine": false,
						"constraints": {
							"allowedValues": [
								{ "label": "None", "value": "None" },
								{ "label": "ReadOnly", "value": "ReadOnly" },
								{ "label": "ReadWrite", "value": "ReadWrite" }
							],
							"required": true
						},
						"visible": "[not(equals(steps('storage').ostStorageSku, 'Ephemeral'))]"
                    },
                    {
                        "name": "ossDiskSetup",
                        "type": "Microsoft.Common.DropDown",
                        "label": "OSS Disk Setup",
                        "defaultValue": "RAID",
                        "toolTip": "Multiple separate OSTs or a single RAIDed OST",
						"multiselect": false,
						"multiLine": false,
						"constraints": {
							"allowedValues": [
								{ "label": "RAID", "value": "raid" },
								{ "label": "Separate", "value": "separate" }
							],
							"required": true
						},
						"visible": true
                    }
                ]
            },
			{
                "name": "hsm",
                "label": "Object Storage (HSM)",
                "subLabel": {
                    "preValidation": "Configure your BLOB storage settings",
                    "postValidation": "Done"
                },
                "bladeTitle": "Object Storage (HSM)",
                "elements": [
					{
						"name": "enableHsm",
						"type": "Microsoft.Common.CheckBox",
						"label": "Enable HSM"
					},
					{
						"name": "hsmStorageDetails",
						"type": "Microsoft.Common.Section",
						"label": "Storage Account Details",
						"elements": [
							{
								"name": "storageAccount",
								"type": "Microsoft.Solutions.ResourceSelector",
								"label": "Select storage accounts",
								"toolTip": "Select a storage account from the available list.",
								"resourceType": "Microsoft.Storage/storageAccounts",
								"options": {
									"filter": {
										"subscription": "onBasics",
										"location": "onBasics"
									}
								}
							},
							{
								"name": "getStorageContainer",
								"type": "Microsoft.Solutions.ArmApiControl",
								"request": {
									"method": "GET",
									"path": "[concat(steps('hsm').hsmStorageDetails.storageAccount.id, '/blobServices/default/containers?api-version=2021-04-01')]"
								}
							},
							{
								"name": "storageContainer",
								"type": "Microsoft.Common.DropDown",
								"label": "Select storage container",
								"toolTip": "Select a storage container from the available list.",
								"constraints": {
									"allowedValues": "[map(steps('hsm').hsmStorageDetails.getStorageContainer.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]"
								},
								"visible": true
							},
							{
								"name": "storageSas",
								"type": "Microsoft.Common.TextBox",
								"label": "Storage SAS Key",
								"toolTip": "The SAS key for the account/container",
								"constraints": {
									"required": false,
									"regex": "^[a-zA-Z0-9-=&%:/]{10,200}$",
									"validationMessage": "Must only contain alphanumeric characters, hyphens, equals, percent and ampersand."
								},
								"multiLine": false,
								"visible": true
							}
						],
						"visible": "[steps('hsm').enableHsm]"
					},
					{
						"name": "enablePolicyEngine",
						"type": "Microsoft.Common.CheckBox",
						"label": "Deploy Policy Engine",
						"visible": "[steps('hsm').enableHsm]"
					},
					{
						"name": "policyEngineDetails",
						"type": "Microsoft.Common.Section",
						"label": "Policy Enging Details",
						"elements": [
							{
								"name": "rbhSku",
								"type": "Microsoft.Compute.SizeSelector",
								"label": "Policy engine server size",
								"toolTip": "The size of virtual machine to provision.",
								"defaultValue": "Standard_D4s_v3",
								"recommendedSizes": [
									"Standard_D4s_v3",
									"Standard_D8s_v3",
									"Standard_D16s_v3"
								],
								"osPlatform": "Linux",
								"count": 1
							}
						],
						"visible": "[and(steps('hsm').enablePolicyEngine, steps('hsm').enablePolicyEngine)]"
					}
                ]
            }
        ],
        "outputs": {
			"adminUser": "[basics('adminUser')]",
			"existingSubnetName": "[basics('networking').subnet]",
			"existingVnetName": "[ substring( basics('networking').vnet, add(lastIndexOf(basics('networking').vnet, '/'), 1), sub( length(basics('networking').vnet), add(lastIndexOf(basics('networking').vnet, '/'), 1) ) ) ]",
			"existingVnetResourceGroupName": "[ substring( basics('networking').vnet, add(indexOf(basics('networking').vnet, 'resourceGroups/'), 15), sub( indexOf(basics('networking').vnet, '/providers'), add(indexOf(basics('networking').vnet, 'resourceGroups/'), 15) ) ) ]",
			"instanceCount": "[steps('storage').ossCount]",
			"location": "[location()]",
			"mdsSku": "[steps('metadata').mdsSku]",
			"mdtCacheOption": "[steps('metadata').mdtCacheOption]",
			"mdtDiskSize": "[steps('metadata').mdtDiskSize]",
			"mdtNumDisks": "[if(equals(steps('metadata').mdtStorageSku,'Ephemeral'),0,steps('metadata').mdtNumDisks)]",
			"mdtStorageSku": "[if(equals(steps('metadata').mdtStorageSku,'Ephemeral'),'Premium_LRS',steps('metadata').mdtStorageSku)]",
			"name": "[basics('fsName')]",
			"ossDiskSetup": "[steps('storage').ossDiskSetup]",
			"ossSku": "[steps('storage').ossSku]",
			"ostCacheOption": "[steps('storage').ostCacheOption]",
			"ostDiskSize": "[steps('storage').ostDiskSize]",
			"ostNumDisks": "[if(equals(steps('storage').ostStorageSku,'Ephemeral'),0,steps('storage').ostNumDisks)]",
			"ostStorageSku": "[if(equals(steps('storage').ostStorageSku,'Ephemeral'),'Premium_LRS',steps('storage').ostStorageSku)]",
			"rsaPublicKey": "[basics('credentials').sshPublicKey]",
			"storageAccount": "[steps('hsm').hsmStorageDetails.storageAccount.name]",
			"storageContainer": "[steps('hsm').hsmStorageDetails.storageContainer]",
			"storageSas": "[steps('hsm').hsmStorageDetails.storageSas]",
			"useAvailabilityZone": "[basics('proximity').useAvailabilityZone]",
			"availabilityZone": "[basics('proximity').availabilityZone]",
			"deployPolicyEngine": "[steps('hsm').enablePolicyEngine]",
			"policyEngineSku": "[steps('hsm').policyEngineDetails.rbhSku]"
        }
    }
}
