{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "name": {
      "maxLength": 20,
      "type": "String",
      "metadata": {
        "description": "The name for the Lustre filesystem."
      }
    },
    "mdsSku": {
      "defaultValue": "Standard_D8s_v3",
      "type": "String",
      "metadata": {
        "description": "The SKU for the Lustre MDS."
      }
    },
    "ossSku": {
      "defaultValue": "Standard_L8s_v2",
      "type": "String",
      "metadata": {
        "description": "The VM type for the Lustre nodes."
      }
    },
    "instanceCount": {
      "minValue": 1,
      "maxValue": 300,
      "type": "Int",
      "metadata": {
        "description": "Number of additional Lustre nodes."
      }
    },
    "adminUser": {
      "type": "String",
      "metadata": {
        "description": "The username for the Lustre filesystem."
      }
    },
    "rsaPublicKey": {
      "type": "String",
      "metadata": {
        "description": "The RSA public key to access the nodes."
      }
    },
    "existingVnetResourceGroupName": {
      "type": "String",
      "metadata": {
        "description": "Name of the resource group for the existing virtual network to deploy the scale set into."
      }
    },
    "existingVnetName": {
      "type": "String",
      "metadata": {
        "description": "Name of the existing virtual network to deploy the scale set into."
      }
    },
    "existingSubnetName": {
      "type": "String",
      "metadata": {
        "description": "Name of the existing subnet to deploy the scale set into."
      }
    },
    "storageAccount": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Optional. The storage account to use (leave blank to disable HSM)"
      }
    },
    "storageContainer": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "The storage container to use for archive"
      }
    },
    "storageSas": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "A SAS key for the storage account"
      }
    },
    "mdtStorageSku": {
      "defaultValue": "Premium_LRS",
      "type": "String",
      "metadata": {
        "description": "The SKU for the MDT disks"
      }
    },
    "mdtCacheOption": {
      "defaultValue": "ReadWrite",
      "type": "String",
      "metadata": {
        "description": "The caching option for the MDT disks"
      }
    },
    "mdtDiskSize": {
      "defaultValue": 1024,
      "type": "Int",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "mdtNumDisks": {
      "type": "Int",
      "metadata": {
        "description": "The number of disks in the MDT RAID"
      }
    },
    "ostStorageSku": {
      "defaultValue": "Premium_LRS",
      "type": "String",
      "metadata": {
        "description": "The SKU for the OST disks"
      }
    },
    "ostCacheOption": {
      "defaultValue": "None",
      "type": "String",
      "metadata": {
        "description": "The caching option for the OST disks"
      }
    },
    "ostDiskSize": {
      "defaultValue": 1024,
      "type": "Int",
      "metadata": {
        "description": "The size of the OST disks"
      }
    },
    "ostNumDisks": {
      "type": "Int",
      "metadata": {
        "description": "The number of disks on each OSS"
      }
    },
    "ossDiskSetup": {
      "defaultValue": "raid",
      "allowedValues": [
        "raid",
        "separate"
      ],
      "type": "String",
      "metadata": {
        "description": "Create a single RAID or use multiple OSTs"
      }
    },
    "deployPolicyEngine": {
      "defaultValue": false,
      "type": "Bool",
      "metadata": {
        "description": "Deploy the Robinhood policy engine"
      }
    },
    "rbhSku": {
      "defaultValue": "Standard_D4s_v4",
      "type": "String",
      "metadata": {
        "description": "The VM type for running Robinhood."
      }
    },
    "useAvailabilityZone": {
      "defaultValue": false,
      "type": "Bool",
      "metadata": {
        "description": "Use an availability zone for the Lustre nodes"
      }
    },
    "availabilityZone": {
      "defaultValue": 1,
      "type": "Int",
      "minValue": 1,
      "maxValue": 3,
      "metadata": {
        "description": "The availability zone to use for the Lustre nodes"
      }
    }
  },
  "variables": {
    "tagname": "[concat('LustreFS-', parameters('name'))]",
    "subnet": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubNetName'))]",
    "imageReference": {
      "publisher": "azhpc",
      "offer": "azurehpc-lustre",
      "sku": "azurehpc-lustre-2_12",
      "version": "latest"
    },
    "imagePlan": {
      "publisher": "azhpc",
      "product": "azurehpc-lustre",
      "name": "azurehpc-lustre-2_12"
    },
    "ciScript": "[concat('#!/bin/bash\nset --',' \"',parameters('name'),'\"',' \"',parameters('instanceCount'),'\"',' \"',parameters('storageAccount'),'\"',' \"',parameters('storageSas'),'\"',' \"',parameters('storageContainer'),'\"',' \"',parameters('ossDiskSetup'),'\"',' \"',parameters('deployPolicyEngine'),'\"','\n','# This script was generated using Makeself 2.4.2\n# The license covering this archive and its contents, if any, is wholly independent of the Makeself license (GPL)\nORIG_UMASK=`umask`\nif test \"n\" = n; then\n    umask 077\nfi\n\nCRCsum=\"201198592\"\nMD5=\"24450fdb29a5d2db9d5250d74ec594fd\"\nSHA=\"0000000000000000000000000000000000000000000000000000000000000000\"\nTMPROOT=${TMPDIR:=/tmp}\nUSER_PWD=\"$PWD\"\nexport USER_PWD\nARCHIVE_DIR=/usr/bin\nexport ARCHIVE_DIR\n\nlabel=\"Cloudinit script\"\nscript=\"./setup_lustre.sh\"\nscriptargs=\"\"\ncleanup_script=\"\"\nlicensetxt=\"\"\nhelpheader=''''\ntargetdir=\"scripts\"\nfilesizes=\"41499\"\nkeep=\"n\"\nnooverwrite=\"n\"\nquiet=\"n\"\naccept=\"n\"\nnodiskspace=\"n\"\nexport_conf=\"n\"\ndecrypt_cmd=\"\"\nskip=\"667\"\n\nprint_cmd_arg=\"\"\nif type printf > /dev/null; then\n    print_cmd=\"printf\"\nelif test -x /usr/ucb/echo; then\n    print_cmd=\"/usr/ucb/echo\"\nelse\n    print_cmd=\"echo\"\nfi\n\nif test -d /usr/xpg4/bin; then\n    PATH=/usr/xpg4/bin:$PATH\n    export PATH\nfi\n\nif test -d /usr/sfw/bin; then\n    PATH=$PATH:/usr/sfw/bin\n    export PATH\nfi\n\nunset CDPATH\n\nMS_Printf()\n{\n    $print_cmd $print_cmd_arg \"$1\"\n}\n\nMS_PrintLicense()\n{\n  if test x\"$licensetxt\" != x; then\n    if test x\"$accept\" = xy; then\n      echo \"$licensetxt\"\n    else\n      echo \"$licensetxt\" | more\n    fi\n    if test x\"$accept\" != xy; then\n      while true\n      do\n        MS_Printf \"Please type y to accept, n otherwise: \"\n        read yn\n        if test x\"$yn\" = xn; then\n          keep=n\n          eval $finish; exit 1\n          break;\n        elif test x\"$yn\" = xy; then\n          break;\n        fi\n      done\n    fi\n  fi\n}\n\nMS_diskspace()\n{\n\t(\n\tdf -kP \"$1\" | tail -1 | awk ''{ if ($4 ~ /%/) {print $3} else {print $4} }''\n\t)\n}\n\nMS_dd()\n{\n    blocks=`expr $3 / 1024`\n    bytes=`expr $3 % 1024`\n    dd if=\"$1\" ibs=$2 skip=1 obs=1024 conv=sync 2> /dev/null | \\\n    { test $blocks -gt 0 && dd ibs=1024 obs=1024 count=$blocks ; \\\n      test $bytes  -gt 0 && dd ibs=1 obs=1024 count=$bytes ; } 2> /dev/null\n}\n\nMS_dd_Progress()\n{\n    if test x\"$noprogress\" = xy; then\n        MS_dd \"$@\"\n        return $?\n    fi\n    file=\"$1\"\n    offset=$2\n    length=$3\n    pos=0\n    bsize=4194304\n    while test $bsize -gt $length; do\n        bsize=`expr $bsize / 4`\n    done\n    blocks=`expr $length / $bsize`\n    bytes=`expr $length % $bsize`\n    (\n        dd ibs=$offset skip=1 count=0 2>/dev/null\n        pos=`expr $pos \\+ $bsize`\n        MS_Printf \"     0%% \" 1>&2\n        if test $blocks -gt 0; then\n            while test $pos -le $length; do\n                dd bs=$bsize count=1 2>/dev/null\n                pcent=`expr $length / 100`\n                pcent=`expr $pos / $pcent`\n                if test $pcent -lt 100; then\n                    MS_Printf \"\\b\\b\\b\\b\\b\\b\\b\" 1>&2\n                    if test $pcent -lt 10; then\n                        MS_Printf \"    $pcent%% \" 1>&2\n                    else\n                        MS_Printf \"   $pcent%% \" 1>&2\n                    fi\n                fi\n                pos=`expr $pos \\+ $bsize`\n            done\n        fi\n        if test $bytes -gt 0; then\n            dd bs=$bytes count=1 2>/dev/null\n        fi\n        MS_Printf \"\\b\\b\\b\\b\\b\\b\\b\" 1>&2\n        MS_Printf \" 100%%  \" 1>&2\n    ) < \"$file\"\n}\n\nMS_Help()\n{\n    cat << EOH >&2\n${helpheader}Makeself version 2.4.2\n 1) Getting help or info about $0 :\n  $0 --help   Print this message\n  $0 --info   Print embedded info : title, default target directory, embedded script ...\n  $0 --lsm    Print embedded lsm entry (or no LSM)\n  $0 --list   Print the list of files in the archive\n  $0 --check  Checks integrity of the archive\n\n 2) Running $0 :\n  $0 [options] [--] [additional arguments to embedded script]\n  with following options (in that order)\n  --confirm             Ask before running embedded script\n  --quiet               Do not print anything except error messages\n  --accept              Accept the license\n  --noexec              Do not run embedded script (implies --noexec-cleanup)\n  --noexec-cleanup      Do not run embedded cleanup script\n  --keep                Do not erase target directory after running\n                        the embedded script\n  --noprogress          Do not show the progress during the decompression\n  --nox11               Do not spawn an xterm\n  --nochown             Do not give the target folder to the current user\n  --chown               Give the target folder to the current user recursively\n  --nodiskspace         Do not check for available disk space\n  --target dir          Extract directly to a target directory (absolute or relative)\n                        This directory may undergo recursive chown (see --nochown).\n  --tar arg1 [arg2 ...] Access the contents of the archive through the tar command\n  --ssl-pass-src src    Use the given src as the source of password to decrypt the data\n                        using OpenSSL. See \"PASS PHRASE ARGUMENTS\" in man openssl.\n                        Default is to prompt the user to enter decryption password\n                        on the current terminal.\n  --cleanup-args args   Arguments to the cleanup script. Wrap in quotes to provide\n                        multiple arguments.\n  --                    Following arguments will be passed to the embedded script\nEOH\n}\n\nMS_Check()\n{\n    OLD_PATH=\"$PATH\"\n    PATH=${GUESS_MD5_PATH:-\"$OLD_PATH:/bin:/usr/bin:/sbin:/usr/local/ssl/bin:/usr/local/bin:/opt/openssl/bin\"}\n\tMD5_ARG=\"\"\n    MD5_PATH=`exec <&- 2>&-; which md5sum || command -v md5sum || type md5sum`\n    test -x \"$MD5_PATH\" || MD5_PATH=`exec <&- 2>&-; which md5 || command -v md5 || type md5`\n    test -x \"$MD5_PATH\" || MD5_PATH=`exec <&- 2>&-; which digest || command -v digest || type digest`\n    PATH=\"$OLD_PATH\"\n\n    SHA_PATH=`exec <&- 2>&-; which shasum || command -v shasum || type shasum`\n    test -x \"$SHA_PATH\" || SHA_PATH=`exec <&- 2>&-; which sha256sum || command -v sha256sum || type sha256sum`\n\n    if test x\"$quiet\" = xn; then\n\t\tMS_Printf \"Verifying archive integrity...\"\n    fi\n    offset=`head -n \"$skip\" \"$1\" | wc -c | tr -d \" \"`\n    verb=$2\n    i=1\n    for s in $filesizes\n    do\n\t\tcrc=`echo $CRCsum | cut -d\" \" -f$i`\n\t\tif test -x \"$SHA_PATH\"; then\n\t\t\tif test x\"`basename $SHA_PATH`\" = xshasum; then\n\t\t\t\tSHA_ARG=\"-a 256\"\n\t\t\tfi\n\t\t\tsha=`echo $SHA | cut -d\" \" -f$i`\n\t\t\tif test x\"$sha\" = x0000000000000000000000000000000000000000000000000000000000000000; then\n\t\t\t\ttest x\"$verb\" = xy && echo \" $1 does not contain an embedded SHA256 checksum.\" >&2\n\t\t\telse\n\t\t\t\tshasum=`MS_dd_Progress \"$1\" $offset $s | eval \"$SHA_PATH $SHA_ARG\" | cut -b-64`;\n\t\t\t\tif test x\"$shasum\" != x\"$sha\"; then\n\t\t\t\t\techo \"Error in SHA256 checksums: $shasum is different from $sha\" >&2\n\t\t\t\t\texit 2\n\t\t\t\telif test x\"$quiet\" = xn; then\n\t\t\t\t\tMS_Printf \" SHA256 checksums are OK.\" >&2\n\t\t\t\tfi\n\t\t\t\tcrc=\"0000000000\";\n\t\t\tfi\n\t\tfi\n\t\tif test -x \"$MD5_PATH\"; then\n\t\t\tif test x\"`basename $MD5_PATH`\" = xdigest; then\n\t\t\t\tMD5_ARG=\"-a md5\"\n\t\t\tfi\n\t\t\tmd5=`echo $MD5 | cut -d\" \" -f$i`\n\t\t\tif test x\"$md5\" = x00000000000000000000000000000000; then\n\t\t\t\ttest x\"$verb\" = xy && echo \" $1 does not contain an embedded MD5 checksum.\" >&2\n\t\t\telse\n\t\t\t\tmd5sum=`MS_dd_Progress \"$1\" $offset $s | eval \"$MD5_PATH $MD5_ARG\" | cut -b-32`;\n\t\t\t\tif test x\"$md5sum\" != x\"$md5\"; then\n\t\t\t\t\techo \"Error in MD5 checksums: $md5sum is different from $md5\" >&2\n\t\t\t\t\texit 2\n\t\t\t\telif test x\"$quiet\" = xn; then\n\t\t\t\t\tMS_Printf \" MD5 checksums are OK.\" >&2\n\t\t\t\tfi\n\t\t\t\tcrc=\"0000000000\"; verb=n\n\t\t\tfi\n\t\tfi\n\t\tif test x\"$crc\" = x0000000000; then\n\t\t\ttest x\"$verb\" = xy && echo \" $1 does not contain a CRC checksum.\" >&2\n\t\telse\n\t\t\tsum1=`MS_dd_Progress \"$1\" $offset $s | CMD_ENV=xpg4 cksum | awk ''{print $1}''`\n\t\t\tif test x\"$sum1\" != x\"$crc\"; then\n\t\t\t\techo \"Error in checksums: $sum1 is different from $crc\" >&2\n\t\t\t\texit 2\n\t\t\telif test x\"$quiet\" = xn; then\n\t\t\t\tMS_Printf \" CRC checksums are OK.\" >&2\n\t\t\tfi\n\t\tfi\n\t\ti=`expr $i + 1`\n\t\toffset=`expr $offset + $s`\n    done\n    if test x\"$quiet\" = xn; then\n\t\techo \" All good.\"\n    fi\n}\n\nMS_Decompress()\n{\n    if test x\"$decrypt_cmd\" != x\"\"; then\n        { eval \"$decrypt_cmd\" || echo \" ... Decryption failed.\" >&2; } | eval \"base64 --decode -i -\"\n    else\n        eval \"base64 --decode -i -\"\n    fi\n    \n    if test $? -ne 0; then\n        echo \" ... Decompression failed.\" >&2\n    fi\n}\n\nUnTAR()\n{\n    if test x\"$quiet\" = xn; then\n\t\ttar $1vf -  2>&1 || { echo \" ... Extraction failed.\" > /dev/tty; kill -15 $$; }\n    else\n\t\ttar $1f -  2>&1 || { echo Extraction failed. > /dev/tty; kill -15 $$; }\n    fi\n}\n\nMS_exec_cleanup() {\n    if test x\"$cleanup\" = xy && test x\"$cleanup_script\" != x\"\"; then\n        cleanup=n\n        cd \"$tmpdir\"\n        eval \"\\\"$cleanup_script\\\" $scriptargs $cleanupargs\"\n    fi\n}\n\nMS_cleanup()\n{\n    echo ''Signal caught, cleaning up'' >&2\n    MS_exec_cleanup\n    cd \"$TMPROOT\"\n    rm -rf \"$tmpdir\"\n    eval $finish; exit 15\n}\n\nfinish=true\nxterm_loop=\nnoprogress=n\nnox11=n\ncopy=none\nownership=n\nverbose=n\ncleanup=y\ncleanupargs=\n\ninitargs=\"$@\"\n\nwhile true\ndo\n    case \"$1\" in\n    -h | --help)\n\tMS_Help\n\texit 0\n\t;;\n    -q | --quiet)\n\tquiet=y\n\tnoprogress=y\n\tshift\n\t;;\n\t--accept)\n\taccept=y\n\tshift\n\t;;\n    --info)\n\techo Identification: \"$label\"\n\techo Target directory: \"$targetdir\"\n\techo Uncompressed size: 32 KB\n\techo Compression: base64\n\tif test x\"n\" != x\"\"; then\n\t    echo Encryption: n\n\tfi\n\techo Date of packaging: Fri Dec 10 14:12:54 GMT 2021\n\techo Built with Makeself version 2.4.2 on \n\techo Build command was: \"/usr/bin/makeself \\\\\n    \\\"--base64\\\" \\\\\n    \\\"scripts\\\" \\\\\n    \\\"cloudinit_2021-12-10_14-12-54.sh\\\" \\\\\n    \\\"Cloudinit script\\\" \\\\\n    \\\"./setup_lustre.sh\\\"\"\n\tif test x\"$script\" != x; then\n\t    echo Script run after extraction:\n\t    echo \"    \" $script $scriptargs\n\tfi\n\tif test x\"\" = xcopy; then\n\t\techo \"Archive will copy itself to a temporary location\"\n\tfi\n\tif test x\"n\" = xy; then\n\t\techo \"Root permissions required for extraction\"\n\tfi\n\tif test x\"n\" = xy; then\n\t    echo \"directory $targetdir is permanent\"\n\telse\n\t    echo \"$targetdir will be removed after extraction\"\n\tfi\n\texit 0\n\t;;\n    --dumpconf)\n\techo LABEL=\\\"$label\\\"\n\techo SCRIPT=\\\"$script\\\"\n\techo SCRIPTARGS=\\\"$scriptargs\\\"\n    echo CLEANUPSCRIPT=\\\"$cleanup_script\\\"\n\techo archdirname=\\\"scripts\\\"\n\techo KEEP=n\n\techo NOOVERWRITE=n\n\techo COMPRESS=base64\n\techo filesizes=\\\"$filesizes\\\"\n\techo CRCsum=\\\"$CRCsum\\\"\n\techo MD5sum=\\\"$MD5sum\\\"\n\techo SHAsum=\\\"$SHAsum\\\"\n\techo SKIP=\\\"$skip\\\"\n\texit 0\n\t;;\n    --lsm)\ncat << EOLSM\nNo LSM.\nEOLSM\n\texit 0\n\t;;\n    --list)\n\techo Target directory: $targetdir\n\toffset=`head -n \"$skip\" \"$0\" | wc -c | tr -d \" \"`\n\tfor s in $filesizes\n\tdo\n\t    MS_dd \"$0\" $offset $s | MS_Decompress | UnTAR t\n\t    offset=`expr $offset + $s`\n\tdone\n\texit 0\n\t;;\n\t--tar)\n\toffset=`head -n \"$skip\" \"$0\" | wc -c | tr -d \" \"`\n\targ1=\"$2\"\n    if ! shift 2; then MS_Help; exit 1; fi\n\tfor s in $filesizes\n\tdo\n\t    MS_dd \"$0\" $offset $s | MS_Decompress | tar \"$arg1\" - \"$@\"\n\t    offset=`expr $offset + $s`\n\tdone\n\texit 0\n\t;;\n    --check)\n\tMS_Check \"$0\" y\n\texit 0\n\t;;\n    --confirm)\n\tverbose=y\n\tshift\n\t;;\n\t--noexec)\n\tscript=\"\"\n    cleanup_script=\"\"\n\tshift\n\t;;\n    --noexec-cleanup)\n    cleanup_script=\"\"\n    shift\n    ;;\n    --keep)\n\tkeep=y\n\tshift\n\t;;\n    --target)\n\tkeep=y\n\ttargetdir=\"${2:-.}\"\n    if ! shift 2; then MS_Help; exit 1; fi\n\t;;\n    --noprogress)\n\tnoprogress=y\n\tshift\n\t;;\n    --nox11)\n\tnox11=y\n\tshift\n\t;;\n    --nochown)\n\townership=n\n\tshift\n\t;;\n    --chown)\n        ownership=y\n        shift\n        ;;\n    --nodiskspace)\n\tnodiskspace=y\n\tshift\n\t;;\n    --xwin)\n\tif test \"n\" = n; then\n\t\tfinish=\"echo Press Return to close this window...; read junk\"\n\tfi\n\txterm_loop=1\n\tshift\n\t;;\n    --phase2)\n\tcopy=phase2\n\tshift\n\t;;\n\t--ssl-pass-src)\n\tif test x\"n\" != x\"openssl\"; then\n\t    echo \"Invalid option --ssl-pass-src: $0 was not encrypted with OpenSSL!\" >&2\n\t    exit 1\n\tfi\n\tdecrypt_cmd=\"$decrypt_cmd -pass $2\"\n\tif ! shift 2; then MS_Help; exit 1; fi\n\t;;\n    --cleanup-args)\n    cleanupargs=\"$2\"\n    if ! shift 2; then MS_help; exit 1; fi\n    ;;\n    --)\n\tshift\n\tbreak ;;\n    -*)\n\techo Unrecognized flag : \"$1\" >&2\n\tMS_Help\n\texit 1\n\t;;\n    *)\n\tbreak ;;\n    esac\ndone\n\nif test x\"$quiet\" = xy -a x\"$verbose\" = xy; then\n\techo Cannot be verbose and quiet at the same time. >&2\n\texit 1\nfi\n\nif test x\"n\" = xy -a `id -u` -ne 0; then\n\techo \"Administrative privileges required for this archive (use su or sudo)\" >&2\n\texit 1\t\nfi\n\nif test x\"$copy\" \\!= xphase2; then\n    MS_PrintLicense\nfi\n\ncase \"$copy\" in\ncopy)\n    tmpdir=\"$TMPROOT\"/makeself.$RANDOM.`date +\"%y%m%d%H%M%S\"`.$$\n    mkdir \"$tmpdir\" || {\n\techo \"Could not create temporary directory $tmpdir\" >&2\n\texit 1\n    }\n    SCRIPT_COPY=\"$tmpdir/makeself\"\n    echo \"Copying to a temporary location...\" >&2\n    cp \"$0\" \"$SCRIPT_COPY\"\n    chmod +x \"$SCRIPT_COPY\"\n    cd \"$TMPROOT\"\n    exec \"$SCRIPT_COPY\" --phase2 -- $initargs\n    ;;\nphase2)\n    finish=\"$finish ; rm -rf `dirname $0`\"\n    ;;\nesac\n\nif test x\"$nox11\" = xn; then\n    if tty -s; then                 # Do we have a terminal?\n\t:\n    else\n        if test x\"$DISPLAY\" != x -a x\"$xterm_loop\" = x; then  # No, but do we have X?\n            if xset q > /dev/null 2>&1; then # Check for valid DISPLAY variable\n                GUESS_XTERMS=\"xterm gnome-terminal rxvt dtterm eterm Eterm xfce4-terminal lxterminal kvt konsole aterm terminology\"\n                for a in $GUESS_XTERMS; do\n                    if type $a >/dev/null 2>&1; then\n                        XTERM=$a\n                        break\n                    fi\n                done\n                chmod a+x $0 || echo Please add execution rights on $0\n                if test `echo \"$0\" | cut -c1` = \"/\"; then # Spawn a terminal!\n                    exec $XTERM -e \"$0 --xwin $initargs\"\n                else\n                    exec $XTERM -e \"./$0 --xwin $initargs\"\n                fi\n            fi\n        fi\n    fi\nfi\n\nif test x\"$targetdir\" = x.; then\n    tmpdir=\".\"\nelse\n    if test x\"$keep\" = xy; then\n\tif test x\"$nooverwrite\" = xy && test -d \"$targetdir\"; then\n            echo \"Target directory $targetdir already exists, aborting.\" >&2\n            exit 1\n\tfi\n\tif test x\"$quiet\" = xn; then\n\t    echo \"Creating directory $targetdir\" >&2\n\tfi\n\ttmpdir=\"$targetdir\"\n\tdashp=\"-p\"\n    else\n\ttmpdir=\"$TMPROOT/selfgz$$$RANDOM\"\n\tdashp=\"\"\n    fi\n    mkdir $dashp \"$tmpdir\" || {\n\techo ''Cannot create target directory'' $tmpdir >&2\n\techo ''You should try option --target dir'' >&2\n\teval $finish\n\texit 1\n    }\nfi\n\nlocation=\"`pwd`\"\nif test x\"$SETUP_NOCHECK\" != x1; then\n    MS_Check \"$0\"\nfi\noffset=`head -n \"$skip\" \"$0\" | wc -c | tr -d \" \"`\n\nif test x\"$verbose\" = xy; then\n\tMS_Printf \"About to extract 32 KB in $tmpdir ... Proceed ? [Y/n] \"\n\tread yn\n\tif test x\"$yn\" = xn; then\n\t\teval $finish; exit 1\n\tfi\nfi\n\nif test x\"$quiet\" = xn; then\n    # Decrypting with openssl will ask for password,\n    # the prompt needs to start on new line\n\tif test x\"n\" = x\"openssl\"; then\n\t    echo \"Decrypting and uncompressing $label...\"\n\telse\n        MS_Printf \"Uncompressing $label\"\n\tfi\nfi\nres=3\nif test x\"$keep\" = xn; then\n    trap MS_cleanup 1 2 3 15\nfi\n\nif test x\"$nodiskspace\" = xn; then\n    leftspace=`MS_diskspace \"$tmpdir\"`\n    if test -n \"$leftspace\"; then\n        if test \"$leftspace\" -lt 32; then\n            echo\n            echo \"Not enough space left in \"`dirname $tmpdir`\" ($leftspace KB) to decompress $0 (32 KB)\" >&2\n            echo \"Use --nodiskspace option to skip this check and proceed anyway\" >&2\n            if test x\"$keep\" = xn; then\n                echo \"Consider setting TMPDIR to a directory with more free space.\"\n            fi\n            eval $finish; exit 1\n        fi\n    fi\nfi\n\nfor s in $filesizes\ndo\n    if MS_dd_Progress \"$0\" $offset $s | MS_Decompress | ( cd \"$tmpdir\"; umask $ORIG_UMASK ; UnTAR xp ) 1>/dev/null; then\n\t\tif test x\"$ownership\" = xy; then\n\t\t\t(cd \"$tmpdir\"; chown -R `id -u` .;  chgrp -R `id -g` .)\n\t\tfi\n    else\n\t\techo >&2\n\t\techo \"Unable to decompress $0\" >&2\n\t\teval $finish; exit 1\n    fi\n    offset=`expr $offset + $s`\ndone\nif test x\"$quiet\" = xn; then\n\techo\nfi\n\ncd \"$tmpdir\"\nres=0\nif test x\"$script\" != x; then\n    if test x\"$export_conf\" = x\"y\"; then\n        MS_BUNDLE=\"$0\"\n        MS_LABEL=\"$label\"\n        MS_SCRIPT=\"$script\"\n        MS_SCRIPTARGS=\"$scriptargs\"\n        MS_ARCHDIRNAME=\"$archdirname\"\n        MS_KEEP=\"$KEEP\"\n        MS_NOOVERWRITE=\"$NOOVERWRITE\"\n        MS_COMPRESS=\"$COMPRESS\"\n        MS_CLEANUP=\"$cleanup\"\n        export MS_BUNDLE MS_LABEL MS_SCRIPT MS_SCRIPTARGS\n        export MS_ARCHDIRNAME MS_KEEP MS_NOOVERWRITE MS_COMPRESS\n    fi\n\n    if test x\"$verbose\" = x\"y\"; then\n\t\tMS_Printf \"OK to execute: $script $scriptargs $* ? [Y/n] \"\n\t\tread yn\n\t\tif test x\"$yn\" = x -o x\"$yn\" = xy -o x\"$yn\" = xY; then\n\t\t\teval \"\\\"$script\\\" $scriptargs \\\"\\$@\\\"\"; res=$?;\n\t\tfi\n    else\n\t\teval \"\\\"$script\\\" $scriptargs \\\"\\$@\\\"\"; res=$?\n    fi\n    if test \"$res\" -ne 0; then\n\t\ttest x\"$verbose\" = xy && echo \"The program ''$script'' returned an error code ($res)\" >&2\n    fi\nfi\n\nMS_exec_cleanup\n\nif test x\"$keep\" = xn; then\n    cd \"$TMPROOT\"\n    rm -rf \"$tmpdir\"\nfi\neval $finish; exit $res\nLi8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA3NzUAMDAwMTc1\nMAAwMDAxNzUwADAwMDAwMDAwMDAwADE0MTU0NjU3NzI3ADAwNzcyMwAgNQAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu\nL2xmc3JiaC5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc3NQAwMDAxNzUw\nADAwMDE3NTAAMDAwMDAwMjU0NDUAMTQxNTEzNjMwNjEAMDExNTMyACAwAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMh\nL2Jpbi9iYXNoCgptZHM9IiQxIgpzdG9yYWdlX2FjY291bnQ9IiQyIgpzdG9yYWdlX3Nhcz0iJDMi\nCnN0b3JhZ2VfY29udGFpbmVyPSIkNCIKCmxmc19tb3VudD0vbHVzdHJlCgojIGluc3RhbGwgZGVw\ncwp5dW0gaW5zdGFsbCAteSBtYXJpYWRiLXNlcnZlciBtYXJpYWRiLWRldmVsIGplbWFsbG9jIGV4\ncGVjdAoKIyBpbnN0YWxsIHJiaCBwYWNrYWdlcwp5dW0gaW5zdGFsbCAteSBcCiAgICBodHRwczov\nL2F6dXJlaHBjLmF6dXJlZWRnZS5uZXQvcnBtcy9yb2Jpbmhvb2QtYWRtLTMuMS42LTEueDg2XzY0\nLnJwbSBcCiAgICBodHRwczovL2F6dXJlaHBjLmF6dXJlZWRnZS5uZXQvcnBtcy9yb2Jpbmhvb2Qt\ndG9vbHMtMy4xLjYtMS5sdXN0cmUyLjEyLmVsNy54ODZfNjQucnBtIFwKICAgIGh0dHBzOi8vYXp1\ncmVocGMuYXp1cmVlZGdlLm5ldC9ycG1zL3JvYmluaG9vZC1sdXN0cmUtMy4xLjYtMS5sdXN0cmUy\nLjEyLmVsNy54ODZfNjQucnBtCgoKIyBlbmFibGUgYW5kIHN0YXJ0IERCCnN5c3RlbWN0bCBlbmFi\nbGUgbWFyaWFkYgpzeXN0ZW1jdGwgc3RhcnQgbWFyaWFkYgoKIyBjcmVhdGUgREIgcGFzc3dvcmQK\ncmJocGFzcz0kKG9wZW5zc2wgcmFuZCAtYmFzZTY0IDEyKQpyYmgtY29uZmlnIGNyZWF0ZV9kYiBs\ndXN0cmUgIiUiICIkcmJocGFzcyIgfHwgZXhpdCAxCmVjaG8gIiRyYmhwYXNzIiA+IC9ldGMvcm9i\naW5ob29kLmQvLmRicGFzc3dvcmQKY2htb2QgNjAwIC9ldGMvcm9iaW5ob29kLmQvLmRicGFzc3dv\ncmQKCnJiaF9jb25maWdfZmlsZT0vZXRjL3JvYmluaG9vZC5kL2x1c3RyZS5jb25mCmNhdCA8PEVP\nRiA+JHJiaF9jb25maWdfZmlsZQojIC0qLSBtb2RlOiBjOyBjLWJhc2ljLW9mZnNldDogNDsgaW5k\nZW50LXRhYnMtbW9kZTogbmlsOyAtKi0KIyB2aW06ZXhwYW5kdGFiOnNoaWZ0d2lkdGg9NDp0YWJz\ndG9wPTQ6CgpHZW5lcmFsCnsKICAgIGZzX3BhdGggPSAiL2x1c3RyZSI7CiAgICBmc190eXBlID0g\nbHVzdHJlOwogICAgc3RheV9pbl9mcyA9IHllczsKICAgIGNoZWNrX21vdW50ZWQgPSB5ZXM7CiAg\nICBsYXN0X2FjY2Vzc19vbmx5X2F0aW1lID0gbm87CiAgICB1aWRfZ2lkX2FzX251bWJlcnMgPSBu\nbzsKfQoKIyBsb2dzIGNvbmZpZ3VyYXRpb24KTG9nCnsKICAgICMgbG9nIGxldmVsczogQ1JJVCwg\nTUFKT1IsIEVWRU5ULCBWRVJCLCBERUJVRywgRlVMTAogICAgZGVidWdfbGV2ZWwgPSBFVkVOVDsK\nCiAgICAjIExvZyBmaWxlCiAgICBsb2dfZmlsZSA9ICIvdmFyL2xvZy9yb2Jpbmhvb2QubG9nIjsK\nCiAgICAjIEZpbGUgZm9yIHJlcG9ydGluZyBwdXJnZSBldmVudHMKICAgIHJlcG9ydF9maWxlID0g\nIi92YXIvbG9nL3JvYmluaG9vZF9hY3Rpb25zLmxvZyI7CiAgICBhbGVydF9maWxlID0gIi92YXIv\nbG9nL3JvYmluaG9vZF9hbGVydHMubG9nIjsKICAgIGNoYW5nZWxvZ3NfZmlsZSA9ICIvdmFyL2xv\nZy9yb2Jpbmhvb2RfY2wubG9nIjsKCiAgICBzdGF0c19pbnRlcnZhbCA9IDVtaW47CgogICAgYmF0\nY2hfYWxlcnRfbWF4ID0gNTAwMDsKICAgIGFsZXJ0X3Nob3dfYXR0cnMgPSB5ZXM7CiAgICBsb2df\ncHJvY25hbWUgPSB5ZXM7CiAgICBsb2dfaG9zdG5hbWUgPSB5ZXM7Cn0KCiMgdXBkdCBwYXJhbXMg\nY29uZmlndXJhdGlvbgpkYl91cGRhdGVfcGFyYW1zCnsKICAgICMgcG9zc2libGUgcG9saWNpZXMg\nZm9yIHJlZnJlc2hpbmcgbWV0YWRhdGEgYW5kIHBhdGggaW4gZGF0YWJhc2U6CiAgICAjICAgbmV2\nZXI6IGdldCB0aGUgaW5mb3JtYXRpb24gb25jZSwgdGhlbiBuZXZlciByZWZyZXNoIGl0CiAgICAj\nICAgYWx3YXlzOiBhbHdheXMgdXBkYXRlIGVudHJ5IGluZm8gd2hlbiBwcm9jZXNzaW5nIGl0CiAg\nICAjICAgb25fZXZlbnQ6IG9ubHkgdXBkYXRlIG9uIHJlbGF0ZWQgZXZlbnQKICAgICMgICBwZXJp\nb2RpYyhpbnRlcnZhbCk6IG9ubHkgdXBkYXRlIHBlcmlvZGljYWxseQogICAgIyAgIG9uX2V2ZW50\nX3BlcmlvZGljKG1pbl9pbnRlcnZhbCxtYXhfaW50ZXJ2YWwpPSBvbl9ldmVudCArIHBlcmlvZGlj\nCgogICAgIyBVcGRhdGluZyBvZiBmaWxlIG1ldGFkYXRhCiAgICBtZF91cGRhdGUgPSBhbHdheXMg\nOwogICAgIyBVcGRhdGluZyBmaWxlIHBhdGggaW4gZGF0YWJhc2UKICAgIHBhdGhfdXBkYXRlID0g\nb25fZXZlbnRfcGVyaW9kaWMoMCwxaCkgOwogICAgIyBGaWxlIGNsYXNzZXMgbWF0Y2hpbmcKICAg\nIGZpbGVjbGFzc191cGRhdGUgPSBhbHdheXMgOwp9CgojIGxpc3QgbWFuYWdlciBjb25maWd1cmF0\naW9uCkxpc3RNYW5hZ2VyCnsKICAgICMgTWV0aG9kIGZvciBjb21taXR0aW5nIGluZm9ybWF0aW9u\nIHRvIGRhdGFiYXNlLgogICAgIyBQb3NzaWJsZSB2YWx1ZXMgYXJlOgogICAgIyAtICJhdXRvY29t\nbWl0Ijogd2VhayB0cmFuc2FjdGlvbnMgKG1vcmUgZWZmaWNpZW50LCBidXQgZGF0YWJhc2UgaW5j\nb25zaXN0ZW5jaWVzIG1heSBvY2N1cikKICAgICMgLSAidHJhbnNhY3Rpb24iOiBtYW5hZ2Ugb3Bl\ncmF0aW9ucyBpbiB0cmFuc2FjdGlvbnMgKGJlc3QgY29uc2lzdGVuY3ksIGxvd2VyIHBlcmZvcm1h\nbmNlKQogICAgIyAtICJwZXJpb2RpYyg8bmJfdHJhbnNhY3Rpb24+KSI6IHBlcmlvZGljYWxseSBj\nb21taXQgKGV2ZXJ5IDxuPiB0cmFuc2FjdGlvbnMpLgogICAgY29tbWl0X2JlaGF2aW9yID0gdHJh\nbnNhY3Rpb24gOwoKICAgICMgTWluaW11bSB0aW1lIChpbiBzZWNvbmRzKSB0byB3YWl0IGJlZm9y\nZSB0cnlpbmcgdG8gcmVlc3RhYmxpc2ggYSBsb3N0IGNvbm5lY3Rpb24uCiAgICAjIFRoZW4gdGhp\ncyB0aW1lIGlzIG11bHRpcGxpZWQgYnkgMiB1bnRpbCByZWFjaGluZyBjb25uZWN0X3JldHJ5X2lu\ndGVydmFsX21heAogICAgY29ubmVjdF9yZXRyeV9pbnRlcnZhbF9taW4gPSAxIDsKICAgIGNvbm5l\nY3RfcmV0cnlfaW50ZXJ2YWxfbWF4ID0gMzAgOwogICAgIyBkaXNhYmxlIHRoZSBmb2xsb3dpbmcg\nb3B0aW9ucyBpZiB5b3UgYXJlIG5vdCBpbnRlcmVzdGVkIGluCiAgICAjIHVzZXIgb3IgZ3JvdXAg\nc3RhdHMgKHRvIHNwZWVkIHVwIHNjYW4pCiAgICBhY2NvdW50aW5nICA9IGVuYWJsZWQgOwoKICAg\nIE15U1FMCiAgICB7CiAgICAgICAgc2VydmVyID0gImxvY2FsaG9zdCIgOwogICAgICAgIGRiICAg\nICA9ICJsdXN0cmUiIDsKICAgICAgICB1c2VyICAgPSAicm9iaW5ob29kIiA7CiAgICAgICAgcGFz\nc3dvcmRfZmlsZSA9ICIvZXRjL3JvYmluaG9vZC5kLy5kYnBhc3N3b3JkIiA7CiAgICAgICAgIyBw\nb3J0ICAgPSAzMzA2IDsKICAgICAgICAjIHNvY2tldCA9ICIvdG1wL215c3FsLnNvY2siIDsKICAg\nICAgICBlbmdpbmUgPSBJbm5vREIgOwogICAgfQp9CgojIGVudHJ5IHByb2Nlc3NvciBjb25maWd1\ncmF0aW9uCkVudHJ5UHJvY2Vzc29yCnsKICAgICMgbmJyIG9mIHdvcmtlciB0aHJlYWRzIGZvciBw\ncm9jZXNzaW5nIHBpcGVsaW5lIHRhc2tzCiAgICBuYl90aHJlYWRzID0gMTYgOwoKICAgICMgTWF4\nIG51bWJlciBvZiBvcGVyYXRpb25zIGluIHRoZSBFbnRyeSBQcm9jZXNzb3IgcGlwZWxpbmUuCiAg\nICAjIElmIHRoZSBudW1iZXIgb2YgcGVuZGluZyBvcGVyYXRpb25zIGV4Y2VlZHMgdGhpcyBsaW1p\ndCwgCiAgICAjIGluZm8gY29sbGVjdG9ycyBhcmUgc3VzcGVuZGVkIHVudGlsIHRoaXMgY291bnQg\nZGVjcmVhc2VzCiAgICBtYXhfcGVuZGluZ19vcGVyYXRpb25zID0gMTAwIDsKCiAgICAjIG1heCBi\nYXRjaGVkIERCIG9wZXJhdGlvbnMgKDE9bm8gYmF0Y2hpbmcpCiAgICBtYXhfYmF0Y2hfc2l6ZSA9\nIDEwMDsKCiAgICAjIE9wdGlvbm5hbHkgc3BlY2lmeSBhIG1heGltdW0gdGhyZWFkIGNvdW50IGZv\nciBlYWNoIHN0YWdlIG9mIHRoZSBwaXBlbGluZToKICAgICMgPHN0YWdlbmFtZT5fdGhyZWFkc19t\nYXggPSA8bj4gKDA6IHVzZSBkZWZhdWx0KQogICAgIyBTVEFHRV9HRVRfRklEX3RocmVhZHNfbWF4\nID0gNCA7CiAgICAjIFNUQUdFX0dFVF9JTkZPX0RCX3RocmVhZHNfbWF4ICAgICA9IDQgOwogICAg\nIyBTVEFHRV9HRVRfSU5GT19GU190aHJlYWRzX21heCAgICAgPSA0IDsKICAgICMgU1RBR0VfUFJF\nX0FQUExZX3RocmVhZHNfbWF4ICAgICAgID0gNCA7CiAgICAjIERpc2FibGUgYmF0Y2hpbmcgKG1h\neF9iYXRjaF9zaXplPTEpIG9yIGFjY291bnRpbmcgKGFjY291bnRpbmc9bm8pCiAgICAjIHRvIGFs\nbG93IHBhcmFsbGVsaXppbmcgdGhlIGZvbGxvd2luZyBzdGVwOgogICAgIyBTVEFHRV9EQl9BUFBM\nWV90aHJlYWRzX21heCAgICAgICAgPSA0IDsKCiAgICAjIGlmIHNldCB0byAnbm8nLCBjbGFzc2Vz\nIHdpbGwgb25seSBiZSBtYXRjaGVkCiAgICAjIGF0IHBvbGljeSBhcHBsaWNhdGlvbiB0aW1lIChu\nb3QgZHVyaW5nIGEgc2NhbiBvciByZWFkaW5nIGNoYW5nZWxvZykKICAgIG1hdGNoX2NsYXNzZXMg\nPSB5ZXM7CgogICAgIyBGYWtpbmcgbXRpbWUgdG8gYW4gb2xkIHRpbWUgY2F1c2VzIHRoZSBmaWxl\nIHRvIGJlIG1pZ3JhdGVkCiAgICAjIHdpdGggdG9wIHByaW9yaXR5LiBFbmFibGluZyB0aGlzIHBh\ncmFtZXRlciBkZXRlY3QgdGhpcyBiZWhhdmlvcgogICAgIyBhbmQgZG9lc24ndCBhbGxvdyAgbXRp\nbWUgPCBjcmVhdGlvbl90aW1lCiAgICBkZXRlY3RfZmFrZV9tdGltZSA9IG5vOwp9CgojIEZTIHNj\nYW4gY29uZmlndXJhdGlvbgpGU19TY2FuCnsKICAgICMgc2ltcGxlIHNjYW4gaW50ZXJ2YWwgKGZp\neGVkKQogICAgc2Nhbl9pbnRlcnZhbCAgICAgID0gICAyZCA7CgogICAgIyBtaW4vbWF4IGZvciBh\nZGFwdGl2ZSBzY2FuIGludGVydmFsOgogICAgIyB0aGUgbW9yZSB0aGUgZmlsZXN5c3RlbSBpcyBm\ndWxsLCB0aGUgbW9yZSBmcmVxdWVudGx5IGl0IGlzIHNjYW5uZWQuCiAgICAjbWluX3NjYW5faW50\nZXJ2YWwgICAgICA9ICAgMjRoIDsKICAgICNtYXhfc2Nhbl9pbnRlcnZhbCAgICAgID0gICAgN2Qg\nOwoKICAgICMgbnVtYmVyIG9mIHRocmVhZHMgdXNlZCBmb3Igc2Nhbm5pbmcgdGhlIGZpbGVzeXN0\nZW0KICAgIG5iX3RocmVhZHNfc2NhbiAgICAgICAgPSAgICAgMiA7CgogICAgIyB3aGVuIGEgc2Nh\nbiBmYWlscywgdGhpcyBpcyB0aGUgZGVsYXkgYmVmb3JlIHJldHJ5aW5nCiAgICBzY2FuX3JldHJ5\nX2RlbGF5ICAgICAgID0gICAgMWggOwoKICAgICMgdGltZW91dCBmb3Igb3BlcmF0aW9ucyBvbiB0\naGUgZmlsZXN5c3RlbQogICAgc2Nhbl9vcF90aW1lb3V0ICAgICAgICA9ICAgIDFoIDsKICAgICMg\nZXhpdCBpZiBvcGVyYXRpb24gdGltZW91dCBpcyByZWFjaGVkPwogICAgZXhpdF9vbl90aW1lb3V0\nICAgICAgICA9ICAgIHllcyA7CiAgICAjIGV4dGVybmFsIGNvbW1hbmQgY2FsbGVkIG9uIHNjYW4g\ndGVybWluYXRpb24KICAgICMgc3BlY2lhbCBhcmd1bWVudHMgY2FuIGJlIHNwZWNpZmllZDoge2Nm\nZ30gPSBjb25maWcgZmlsZSBwYXRoLAogICAgIyB7ZnNwYXRofSA9IHBhdGggdG8gbWFuYWdlZCBm\naWxlc3lzdGVtCiAgICAjY29tcGxldGlvbl9jb21tYW5kICAgICA9ICAgICIvcGF0aC90by9teS9z\nY3JpcHQuc2ggLWYge2NmZ30gLXAge2ZzcGF0aH0iIDsKCiAgICAjIEludGVybmFsIHNjaGVkdWxl\nciBncmFudWxhcml0eSAoZm9yIHRlc3RpbmcgYW5kIG9mIHNjYW4sIGhhbmdzLCAuLi4pCiAgICBz\ncG9vbGVyX2NoZWNrX2ludGVydmFsID0gIDFtaW4gOwoKICAgICMgTWVtb3J5IHByZWFsbG9jYXRp\nb24gcGFyYW1ldGVycwogICAgbmJfcHJlYWxsb2NfdGFza3MgICAgICA9ICAgMjU2IDsKCiAgICBJ\nZ25vcmUKICAgIHsKICAgICAgICAjIGlnbm9yZSAiLnNuYXBzaG90IiBhbmQgIi5zbmFwZGlyIiBk\naXJlY3RvcmllcyAoZG9uJ3Qgc2NhbiB0aGVtKQogICAgICAgIHR5cGUgPT0gZGlyZWN0b3J5CiAg\nICAgICAgYW5kCiAgICAgICAgKCBuYW1lID09ICIuc25hcGRpciIgb3IgbmFtZSA9PSAiLnNuYXBz\naG90IiApCiAgICB9Cn0KCiMgY2hhbmdlbG9nIHJlYWRlciBjb25maWd1cmF0aW9uCiMgUGFyYW1l\ndGVycyBmb3IgcHJvY2Vzc2luZyBNRFQgY2hhbmdlbG9ncyA6CkNoYW5nZUxvZwp7CiAgICAjIDEg\nTURUIGJsb2NrIGZvciBlYWNoIE1EVCA6CiAgICBNRFQKICAgIHsKICAgICAgICAjIG5hbWUgb2Yg\ndGhlIGZpcnN0IE1EVAogICAgICAgIG1kdF9uYW1lICA9ICJNRFQwMDAwIiA7CgogICAgICAgICMg\naWQgb2YgdGhlIHBlcnNpc3RlbnQgY2hhbmdlbG9nIHJlYWRlcgogICAgICAgICMgYXMgcmV0dXJu\nZWQgYnkgImxjdGwgY2hhbmdlbG9nX3JlZ2lzdGVyIiBjb21tYW5kCiAgICAgICAgcmVhZGVyX2lk\nID0gImNsMSIgOwogICAgfQoKICAgICMgY2xlYXIgY2hhbmdlbG9nIGV2ZXJ5IDEwMjQgcmVjb3Jk\nczoKICAgIGJhdGNoX2Fja19jb3VudCA9IDEwMjQgOwoKICAgIGZvcmNlX3BvbGxpbmcgICAgPSB5\nZXMgOwogICAgcG9sbGluZ19pbnRlcnZhbCA9IDFzIDsKICAgICMgY2hhbmdlbG9nIGJhdGNoaW5n\nIHBhcmFtZXRlcnMKICAgIHF1ZXVlX21heF9zaXplICAgPSAxMDAwIDsKICAgIHF1ZXVlX21heF9h\nZ2UgICAgPSA1cyA7CiAgICBxdWV1ZV9jaGVja19pbnRlcnZhbCA9IDFzIDsKICAgICMgZGVsYXlz\nIHRvIHVwZGF0ZSBsYXN0IGNvbW1pdHRlZCByZWNvcmQgaW4gdGhlIERCCiAgICBjb21taXRfdXBk\nYXRlX21heF9kZWxheSA9IDVzIDsKICAgIGNvbW1pdF91cGRhdGVfbWF4X2RlbHRhID0gMTBrIDsK\nCiAgICAjIHVuY29tbWVudCB0byBkdW1wIGFsbCBjaGFuZ2Vsb2cgcmVjb3JkcyB0byB0aGUgZmls\nZQp9CgojIHBvbGljaWVzIGNvbmZpZ3VyYXRpb24KIyBMb2FkIHBvbGljeSBkZWZpbml0aW9ucyBm\nb3IgTHVzdHJlL0hTTQolaW5jbHVkZSAiaW5jbHVkZXMvbGhzbS5pbmMiCgojIyMjIEZpbGVjbGFz\nc2VzIGRlZmluaXRpb25zICMjIyMKCkZpbGVDbGFzcyBzbWFsbF9maWxlcyB7CiAgICBkZWZpbml0\naW9uIHsgdHlwZSA9PSBmaWxlIGFuZCBzaXplID4gMCBhbmQgc2l6ZSA8PSAxNk1CIH0KICAgICMg\ncmVwb3J0ID0geWVzIChkZWZhdWx0KQp9CkZpbGVDbGFzcyBzdGRfZmlsZXMgewogICAgZGVmaW5p\ndGlvbiB7IHR5cGUgPT0gZmlsZSBhbmQgc2l6ZSA+IDE2TUIgYW5kIHNpemUgPD0gMUdCIH0KfQpG\naWxlQ2xhc3MgYmlnX2ZpbGVzIHsKICAgIGRlZmluaXRpb24geyB0eXBlID09IGZpbGUgYW5kIHNp\nemUgPiAxR0IgfQp9CgpsaHNtX2NvbmZpZyB7CiAgICAjIHVzZWQgZm9yICd1bmRlbGV0ZSc6IGNv\nbW1hbmQgdG8gY2hhbmdlIHRoZSBmaWQgb2YgYW4gZW50cnkgaW4gYXJjaGl2ZQogICAgcmViaW5k\nX2NtZCA9ICIvdXNyL3NiaW4vbGhzbXRvb2xfcG9zaXggLS1oc21fcm9vdD0vdG1wL2JhY2tlbmQg\nLS1hcmNoaXZlIHthcmNoaXZlX2lkfSAtLXJlYmluZCB7b2xkZmlkfSB7bmV3ZmlkfSB7ZnNyb290\nfSI7Cn0KCmxoc21fYXJjaGl2ZV9wYXJhbWV0ZXJzIHsKICAgIG5iX3RocmVhZHMgPSAxOwoKICAg\nICMgbGltaXQgYXJjaGl2ZSByYXRlIHRvIGF2b2lkIGZsb29kaW5nIHRoZSBNRFQgY29vcmRpbmF0\nb3IKICAgIHNjaGVkdWxlcnMgPSBjb21tb24ucmF0ZV9saW1pdDsKICAgIHJhdGVfbGltaXQgewog\nICAgICAgICMgbWF4IGNvdW50IHBlciBwZXJpb2QKICAgICAgICBtYXhfY291bnQgPSAxMDAwOwog\nICAgICAgICMgbWF4IHNpemUgcGVyIHBlcmlvZDogMUdCL3MKICAgICAgICAjbWF4X3NpemUgPSAx\nMEdCOwogICAgICAgICMgcGVyaW9kLCBpbiBtaWxsaXNlY29uZHM6IDEwcwogICAgICAgIHBlcmlv\nZF9tcyA9IDEwMDAwOwogICAgfQoKICAgICMgc3VzcGVuZCBwb2xpY3kgcnVuIGlmIGFjdGlvbiBl\ncnJvciByYXRlID4gNTAlIChhZnRlciAxMDAgZXJyb3JzKQogICAgc3VzcGVuZF9lcnJvcl9wY3Qg\nPSA1MCU7CiAgICBzdXNwZW5kX2Vycm9yX21pbj0gMTAwOwoKICAgICMgb3ZlcnJpZGVzIHBvbGlj\neSBkZWZhdWx0IGFjdGlvbgogICAgYWN0aW9uID0gY21kKCJsZnMgaHNtX2FyY2hpdmUgLS1hcmNo\naXZlIHthcmNoaXZlX2lkfSAvbHVzdHJlLy5sdXN0cmUvZmlkL3tmaWR9Iik7CgogICAgIyBkZWZh\ndWx0IGFjdGlvbiBwYXJhbWV0ZXJzCiAgICBhY3Rpb25fcGFyYW1zIHsKICAgICAgICBhcmNoaXZl\nX2lkID0gMTsKICAgIH0KfQoKbGhzbV9hcmNoaXZlX3J1bGVzIHsKICAgIHJ1bGUgYXJjaGl2ZV9z\nbWFsbCB7CiAgICAgICAgdGFyZ2V0X2ZpbGVjbGFzcyA9IHNtYWxsX2ZpbGVzOwogICAgICAgIGNv\nbmRpdGlvbiB7IGxhc3RfbW9kID49IDMwbWluIH0KICAgIH0KCiAgICBydWxlIGFyY2hpdmVfc3Rk\nIHsKICAgICAgICB0YXJnZXRfZmlsZWNsYXNzID0gc3RkX2ZpbGVzOwogICAgICAgIHRhcmdldF9m\naWxlY2xhc3MgPSBiaWdfZmlsZXM7CiAgICAgICAgY29uZGl0aW9uIHsgbGFzdF9tb2QgPj0gMzBt\naW4gfQogICAgfQoKICAgICMgZmFsbGJhY2sgcnVsZQogICAgcnVsZSBkZWZhdWx0IHsKICAgICAg\nICBjb25kaXRpb24geyBsYXN0X21vZCA+PSAzMG1pbiB9CiAgICB9Cn0KCiMgcnVuIGV2ZXJ5IDUg\nbWluCmxoc21fYXJjaGl2ZV90cmlnZ2VyIHsKICAgIHRyaWdnZXJfb24gPSBwZXJpb2RpYzsKICAg\nIGNoZWNrX2ludGVydmFsID0gNW1pbjsKfQoKIyMjIyBMdXN0cmUvSFNNIHJlbGVhc2UgY29uZmln\ndXJhdGlvbiAjIyMjCgpsaHNtX3JlbGVhc2VfcnVsZXMgewogICAgIyBrZWVwIHNtYWxsIGZpbGVz\nIG9uIGRpc2sgYXMgbG9uZyBhcyBwb3NzaWJsZQogICAgcnVsZSByZWxlYXNlX3NtYWxsIHsKICAg\nICAgICB0YXJnZXRfZmlsZWNsYXNzID0gc21hbGxfZmlsZXM7CiAgICAgICAgY29uZGl0aW9uIHsg\nbGFzdF9hY2Nlc3MgPiAxeSB9CiAgICB9CgogICAgcnVsZSByZWxlYXNlX3N0ZCB7CiAgICAgICAg\ndGFyZ2V0X2ZpbGVjbGFzcyA9IHN0ZF9maWxlczsKICAgICAgICB0YXJnZXRfZmlsZWNsYXNzID0g\nYmlnX2ZpbGVzOwogICAgICAgIGNvbmRpdGlvbiB7IGxhc3RfYWNjZXNzID4gMWQgfQogICAgfQoK\nICAgICMgZmFsbGJhY2sgcnVsZQogICAgcnVsZSBkZWZhdWx0IHsKICAgICAgICBjb25kaXRpb24g\neyBsYXN0X2FjY2VzcyA+IDZoIH0KICAgIH0KfQoKIyBydW4gJ2xoc21fcmVsZWFzZScgb24gZnVs\nbCBPU1RzCmxoc21fcmVsZWFzZV90cmlnZ2VyIHsKICAgIHRyaWdnZXJfb24gPSBvc3RfdXNhZ2U7\nCiAgICBoaWdoX3RocmVzaG9sZF9wY3QgPSA4NSU7CiAgICBsb3dfdGhyZXNob2xkX3BjdCAgPSA4\nMCU7CiAgICBjaGVja19pbnRlcnZhbCAgICAgPSA1bWluOwp9CgpsaHNtX3JlbGVhc2VfcGFyYW1l\ndGVycyB7CiAgICBuYl90aHJlYWRzID0gNDsKIyMgcHVyZ2UgMTAwMCBmaWxlcyBtYXggYXQgb25j\nZQojICAgIG1heF9hY3Rpb25fY291bnQgPSAxMDAwOwojICAgIG1heF9hY3Rpb25fdm9sdW1lID0g\nMVRCOwoKICAgICMgc3VzcGVuZCBwb2xpY3kgcnVuIGlmIGFjdGlvbiBlcnJvciByYXRlID4gNTAl\nIChhZnRlciAxMDAgZXJyb3JzKQogICAgc3VzcGVuZF9lcnJvcl9wY3QgPSA1MCU7CiAgICBzdXNw\nZW5kX2Vycm9yX21pbj0gMTAwOwp9CgpsaHNtX3JlbW92ZV9wYXJhbWV0ZXJzCnsKICAgICMgb3Zl\ncnJpZGVzIHBvbGljeSBkZWZhdWx0IGFjdGlvbgogICAgYWN0aW9uID0gY21kKCIvdXNyL3NiaW4v\nbGZzX2hzbV9yZW1vdmUuc2gge2Zzcm9vdH0ge2Z1bGxwYXRofSB7YXJjaGl2ZV9pZH0ge2ZpZH0i\nKTsKCiAgICAjIGRlZmF1bHQgYWN0aW9uIHBhcmFtZXRlcnMKICAgIGFjdGlvbl9wYXJhbXMgewog\nICAgICAgIGFyY2hpdmVfaWQgPSAxOwogICAgfSAKfQoKIyMjIyBMdXN0cmUvSFNNIHJlbW92ZSBj\nb25maWd1cmF0aW9uICMjIyMKbGhzbV9yZW1vdmVfcnVsZXMKewogICAgIyBjbGVhbnVwIGJhY2tl\nbmQgZmlsZXMgYWZ0ZXIgNW0KICAgIHJ1bGUgZGVmYXVsdCB7CiAgICAgICAgY29uZGl0aW9uIHsg\ncm1fdGltZSA+PSA1bSB9CiAgICB9Cn0KCiMgcnVuIGRhaWx5Cmxoc21fcmVtb3ZlX3RyaWdnZXIK\newogICAgdHJpZ2dlcl9vbiA9IHBlcmlvZGljOwogICAgY2hlY2tfaW50ZXJ2YWwgPSA1bTsKfQpF\nT0YKY2htb2QgNjAwICRyYmhfY29uZmlnX2ZpbGUKCgpyYmhfbG9nX3JvdGF0ZV9maWxlPSIvZXRj\nL2xvZ3JvdGF0ZS5kL3JvYmluaG9vZCIKY2F0IDw8RU9GID4gJHJiaF9sb2dfcm90YXRlX2ZpbGUK\nL3Zhci9sb2cvcm9iaW5ob29kKi5sb2cgewogICAgY29tcHJlc3MKICAgIHdlZWtseQogICAgcm90\nYXRlIDYKICAgIG5vdGlmZW1wdHkKICAgIG1pc3Npbmdvawp9CkVPRgpjaG1vZCA2NDQgJHJiaF9s\nb2dfcm90YXRlX2ZpbGUKCgpoc21fcmVtb3ZlX3NjcmlwdD0iL3Vzci9zYmluL2xmc19oc21fcmVt\nb3ZlLnNoIgpjYXQgPDxFT0YgPiAkaHNtX3JlbW92ZV9zY3JpcHQKIyEvYmluL2Jhc2gKCmZzcm9v\ndD0iXCQxIgpmdWxscGF0aD0iXCQyIgphcmNoaXZlX2lkPSJcJDMiCmZpZD0iXCQ0IgoKbGZzIGhz\nbV9yZW1vdmUgLS1kYXRhICJ7XCJmaWxlX2lkXCI6XCJcJHtmdWxscGF0aCNcJHtmc3Jvb3R9L31c\nIn0iIC0tYXJjaGl2ZSBcJHthcmNoaXZlX2lkfSAtLW1udHBhdGggXCR7ZnNyb290fSBcJHtmaWR9\nCkVPRgpjaG1vZCA3NTUgJGhzbV9yZW1vdmVfc2NyaXB0CgpzeXN0ZW1jdGwgZW5hYmxlIHJvYmlu\naG9vZApzeXN0ZW1jdGwgc3RhcnQgcm9iaW5ob29kCgpyb2Jpbmhvb2QgLS1zY2FuIC0tb25jZQoK\nCmx1c3RyZW1ldGFzeW5jX3N5c3RlbWRfZmlsZT0iL2xpYi9zeXN0ZW1kL3N5c3RlbS9sdXN0cmVt\nZXRhc3luYy5zZXJ2aWNlIgpjYXQgPDxFT0YgPiAkbHVzdHJlbWV0YXN5bmNfc3lzdGVtZF9maWxl\nCltVbml0XQpEZXNjcmlwdGlvbj1IYW5kbGluZyBkaXJlY3RvcnkvbWV0YSBkYXRhIGJhY2t1cCBv\nbiBMdXN0cmUgZmlsZXN5c3RlbS4KQWZ0ZXI9c3lzbG9nLnRhcmdldCBuZXR3b3JrLnRhcmdldCBy\nZW1vdGUtZnMudGFyZ2V0IG5zcy1sb29rdXAudGFyZ2V0CgpbU2VydmljZV0KVHlwZT1zaW1wbGUK\nRW52aXJvbm1lbnQ9IlNUT1JBR0VfU0FTPT8kc3RvcmFnZV9zYXMiCkV4ZWNTdGFydD0vc2Jpbi9j\naGFuZ2Vsb2ctcmVhZGVyIC1hY2NvdW50ICIkc3RvcmFnZV9hY2NvdW50IiAtY29udGFpbmVyICIk\nc3RvcmFnZV9jb250YWluZXIiIC1tZHQgTHVzdHJlRlMtTURUMDAwMCAtdXNlcmlkIGNsMgpSZXN0\nYXJ0PWFsd2F5cwoKW0luc3RhbGxdCldhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0CkVPRgpjaG1v\nZCA2MDAgJGx1c3RyZW1ldGFzeW5jX3N5c3RlbWRfZmlsZQoKc3lzdGVtY3RsIGVuYWJsZSBsdXN0\ncmVtZXRhc3luYwpzeXN0ZW1jdGwgc3RhcnQgbHVzdHJlbWV0YXN5bmMKAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALi9zZXR1cF9sdXN0cmUuc2gAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA3NzUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDA2NjE1ADE0\nMTU0NjU3NzI3ADAxMzAzMAAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIS9iaW4vYmFzaAoKZXhlYyA+IC92YXIv\nbG9nL3NldHVwX2x1c3RyZS5sb2cgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmV4ZWMgMj4mMQoKc2NyaXB0X2Rpcj0i\nJCggY2QgIiQoIGRpcm5hbWUgIiR7QkFTSF9TT1VSQ0VbMF19IiApIiA+L2Rldi9udWxsIDI+JjEg\nJiYgcHdkICkiCmVjaG8gInNjcmlwdF9kaXIgPSAkc2NyaXB0X2RpciIKCm1kcz0iJDEiCm5fb3Nz\nPSIkMiIKc3RvcmFnZV9hY2NvdW50PSIkMyIgCnN0b3JhZ2Vfc2FzPSIkNCIKc3RvcmFnZV9jb250\nYWluZXI9IiQ1Igpvc3NfZGlza19zZXR1cD0iJDYiCmRlcGxveV9wb2xpY3lfZW5naW5lPSIkNyIK\nCmVjaG8gbWRzPSIkMSIKZWNobyBuX29zcz0iJDIiCmVjaG8gc3RvcmFnZV9hY2NvdW50PSIkMyIg\nCmVjaG8gc3RvcmFnZV9zYXM9IiR7NC9zaWc9Ki9zaWc9UkVEQUNURUR9IgplY2hvIHN0b3JhZ2Vf\nY29udGFpbmVyPSIkNSIKZWNobyBvc3NfZGlza19zZXR1cD0iJDYiCgpyYmg9IiR7bWRzfXJiaCIK\nCmx1c3RyZV92ZXJzaW9uPTIuMTIuNQoKaWYgWyAiJHN0b3JhZ2VfYWNjb3VudCIgPSAiIiBdOyB0\naGVuCgl1c2VfaHNtPWZhbHNlCmVsc2UKCXVzZV9oc209dHJ1ZQpmaQoKaWYgWyAiJGxvZ19hbmFs\neXRpY3NfbmFtZSIgPSAiIiBdOyB0aGVuCgl1c2VfbG9nX2FuYWx5dGljcz1mYWxzZQplbHNlCgl1\nc2VfbG9nX2FuYWx5dGljcz10cnVlCmZpCgppZiBbICIkSE9TVE5BTUUiID0gIiRyYmgiIF07IHRo\nZW4KCgllY2hvICJ3YWl0IGZvciB0aGUgbWRzIHRvIHN0YXJ0IgoJbW9kcHJvYmUgbHVzdHJlCgl3\naGlsZSAhIGxjdGwgcGluZyAkbWRzQHRjcDsgZG8KCQlzbGVlcCAyCglkb25lCgplbHNlIAoKCSMg\ndmFycyB1c2VkIGluIHNjcmlwdAoJaWYgWyAtZSAvZGV2L252bWUwbjEgXTsgdGhlbgoJCWRldmlj\nZXM9Jy9kZXYvbnZtZSpuMScKCQluX2RldmljZXM9JChlY2hvICRkZXZpY2VzIHwgd2MgLXcpCgkJ\nZWNobyAiVXNpbmcgJG5fZGV2aWNlcyBOVk1FIGRldmljZXMiCgllbGlmIFsgLWUgL2Rldi9zZGMg\nXTsgdGhlbgoJCWRldmljZXM9Jy9kZXYvc2RbYy1tXScKCQluX2RldmljZXM9JChlY2hvICRkZXZp\nY2VzIHwgd2MgLXcpCgkJZWNobyAiVXNpbmcgJG5fZGV2aWNlcyBOVk1FIGRldmljZXMiCgllbGlm\nIFsgLWUgL2Rldi9zZGIgXTsgdGhlbgoJCWRldmljZXM9Jy9kZXYvc2RiJwoJCW5fZGV2aWNlcz0x\nCgkJZWNobyAiVXNpbmcgZXBoZW1lcmFsIGRpc2sgb24gL2Rldi9zZGIiCgllbHNlCgkJZWNobyAi\nRVJST1I6IGNhbm5vdCBmaW5kIGRldmljZXMgZm9yIHN0b3JhZ2UiCgkJZXhpdCAxCglmaQoKCWlm\nIFtbICIkbl9kZXZpY2VzIiAtZ3QgIjEiICYmICggIiRvc3NfZGlza19zZXR1cCIgPSAicmFpZCIg\nfHwgIiRIT1NUTkFNRSIgPSAiJG1kcyIgKSBdXTsgdGhlbgoJCWRldmljZT0vZGV2L21kMTAKCQll\nY2hvICJjcmVhdGluZyByYWlkICgkZGV2aWNlKSBmcm9tICRuX2RldmljZXMgZGV2aWNlcyA6ICRk\nZXZpY2VzIgoJCSRzY3JpcHRfZGlyL2NyZWF0ZV9yYWlkMC5zaCAkZGV2aWNlICRkZXZpY2VzCgkJ\nZGV2aWNlcz0kZGV2aWNlCgkJbl9kZXZpY2VzPTEKCWZpCgoJZWNobyAidXNpbmcgJG5fZGV2aWNl\ncyBkZXZpY2UocykgOiAkZGV2aWNlcyIKCgoJaWYgWyAiJEhPU1ROQU1FIiA9ICIkbWRzIiBdOyB0\naGVuCgoJCSMgU0VUVVAgTURTCgkJJHNjcmlwdF9kaXIvbGZzbWFzdGVyLnNoICRkZXZpY2VzICRu\nX29zcwoKCWVsc2UKCgkJZWNobyAid2FpdCBmb3IgdGhlIG1kcyB0byBzdGFydCIKCQltb2Rwcm9i\nZSBsdXN0cmUKCQl3aGlsZSAhIGxjdGwgcGluZyAkbWRzQHRjcDsgZG8KCQkJc2xlZXAgMgoJCWRv\nbmUKCgkJaWR4PTAKCQlmb3IgYyBpbiAkKGVjaG8gJHtIT1NUTkFNRSMjJG1kc30gfCBncmVwIC1v\nIC4pOyBkbwoJCQllY2hvICRjCQkKCQkJaWR4PSQoKCRpZHggKiAzNikpCgkJCWlmIFsgLXogIiR7\nYyMjWzAtOV19IiBdOyB0aGVuCgkJCQlpZHg9JCgoJGlkeCArICRjKSkKCQkJZWxzZQoJCQkJaWR4\nPSQoKCQocHJpbnRmICIkaWR4ICsgMTAgKyAlZCAtICVkIiAiJyR7Y15efSIgIidBIikpKQoJCQlm\naQoJCWRvbmUKCQkKCQlvc3RfaW5kZXg9JCgoICggJGlkeCAqICRuX2RldmljZXMgKSArIDEgKSkK\nCgkJZWNobyAic3RhcnRpbmcgb3N0IGluZGV4PSRvc3RfaW5kZXgiCgoJCW1kc19pcD0kKHBpbmcg\nLWMgMSAkbWRzIHwgaGVhZCAtMSB8IHNlZCAncy9eW14pXSooLy9nO3MvKS4qJC8vZycpCgoJCSRz\nY3JpcHRfZGlyL2xmc29zcy5zaCAkbWRzX2lwICIkZGV2aWNlcyIgJG9zdF9pbmRleAoKCWZpCgpm\naQoKaWYgWyAiJHt1c2VfaHNtLCx9IiA9ICJ0cnVlIiBdOyB0aGVuCgoJaWYgWyAiJEhPU1ROQU1F\nIiA9ICIkbWRzIiBdOyB0aGVuCgoJCSMgZGVwbG95IG9uIHRoZSBNRFMgaWYgd2UgYXJlbid0IHVz\naW5nIGEgcG9saWN5IGVuZ2luZQoJCWlmIFsgIiRkZXBsb3lfcG9saWN5X2VuZ2luZSIgPSAiVHJ1\nZSIgXTsgdGhlbgoKCQkJIyByZWdpc3RlciBjbDEgLSByb2Jpbmhvb2QKCQkJbGN0bCAtLWRldmlj\nZSBMdXN0cmVGUy1NRFQwMDAwIGNoYW5nZWxvZ19yZWdpc3RlcgoJCQkjIHJlZ2lzdGVyIGNsMiAt\nIGx1c3RyZW1ldGFzeW5jCgkJCWxjdGwgLS1kZXZpY2UgTHVzdHJlRlMtTURUMDAwMCBjaGFuZ2Vs\nb2dfcmVnaXN0ZXIKCgkJZWxzZQoKCQkJIyBJTVBPUlQgQ09OVEFJTkVSIChzbyBtb3VudCBsdXN0\ncmUgb24gdGhlIG1kcyB0byBpbXBvcnQpCgkJCW1rZGlyIC9sdXN0cmUKCQkJbW91bnQgLXQgbHVz\ndHJlICR7bWRzfUB0Y3AwOi9MdXN0cmVGUyAvbHVzdHJlCgkJCWNobW9kIDc3NyAvbHVzdHJlCgoJ\nCQkkc2NyaXB0X2Rpci9sZnNpbXBvcnQuc2ggIiRzdG9yYWdlX2FjY291bnQiICIkc3RvcmFnZV9z\nYXMiICIkc3RvcmFnZV9jb250YWluZXIiIC9sdXN0cmUKCQkKCQlmaQoKCWVsaWYgWyAiJEhPU1RO\nQU1FIiA9ICIke3JiaH0iIF07IHRoZW4KCgkJIyBJTVBPUlQgQ09OVEFJTkVSCgkJbWtkaXIgL2x1\nc3RyZQoJCWVjaG8gIiR7bWRzfUB0Y3AwOi9MdXN0cmVGUyAvbHVzdHJlIGx1c3RyZSBmbG9jayxk\nZWZhdWx0cyxfbmV0ZGV2IDAgMCIgPj4gL2V0Yy9mc3RhYgoJCXdoaWxlICEgbW91bnQgLWE7IGRv\nCgkJCWVjaG8gIlNsZWVwaW5nIGZvciAxMHMgYmVmb3JlIHJldHJ5aW5nIgoJCQlzbGVlcCAxMAoJ\nCWRvbmUKCQljaG1vZCA3NzcgL2x1c3RyZQoJCQoJCSRzY3JpcHRfZGlyL2xmc2ltcG9ydC5zaCAi\nJHN0b3JhZ2VfYWNjb3VudCIgIiRzdG9yYWdlX3NhcyIgIiRzdG9yYWdlX2NvbnRhaW5lciIgL2x1\nc3RyZQoJCQoJCSRzY3JpcHRfZGlyL2xmc3JiaC5zaCAkbWRzICIkc3RvcmFnZV9hY2NvdW50IiAi\nJHN0b3JhZ2Vfc2FzIiAiJHN0b3JhZ2VfY29udGFpbmVyIgoKCWVsc2UKCgkJJHNjcmlwdF9kaXIv\nbGZzaHNtLnNoICIkbWRzIiAiJHN0b3JhZ2VfYWNjb3VudCIgIiRzdG9yYWdlX3NhcyIgIiRzdG9y\nYWdlX2NvbnRhaW5lciIKCglmaQoKZmkKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4vbGZzb3NzLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAwMDAwNzc1ADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMTEyNAAxNDEyMDM2MjE0\nNwAwMTE1NDcAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0\nYXIgIABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyEvYmluL2Jhc2gKCiMgYXJnOiAkMSA9IGxmc21hc3Rl\ncgojIGFyZzogJDIgPSBkZXZpY2UgKGUuZy4gTD0vZGV2L3NkYiBMdjI9L2Rldi9udm1lMG4xKQoj\nIGFyZzogJDMgPSBzdGFydCBpbmRleAptYXN0ZXI9JDEKZGV2aWNlcz0kMgppbmRleD0kMwoKbmRl\ndmljZXM9JCh3YyAtdyA8PDwkZGV2aWNlcykKCmZvciBkZXZpY2UgaW4gJGRldmljZXM7IGRvCgog\nICAgbWtmcy5sdXN0cmUgXAogICAgICAgIC0tZnNuYW1lPUx1c3RyZUZTIFwKICAgICAgICAtLWJh\nY2tmc3R5cGU9bGRpc2tmcyBcCiAgICAgICAgLS1yZWZvcm1hdCBcCiAgICAgICAgLS1vc3QgXAog\nICAgICAgIC0tbWdzbm9kZT0kbWFzdGVyIFwKICAgICAgICAtLWluZGV4PSRpbmRleCBcCiAgICAg\nICAgLS1tb3VudGZzb3B0aW9ucz0iZXJyb3JzPXJlbW91bnQtcm8iIFwKICAgICAgICAkZGV2aWNl\nCgogICAgbWtkaXIgL21udC9vc3Mke2luZGV4fQogICAgZWNobyAiJGRldmljZSAvbW50L29zcyR7\naW5kZXh9IGx1c3RyZSBub2F0aW1lLG5vZGlyYXRpbWUsbm9iYXJyaWVyIDAgMiIgPj4gL2V0Yy9m\nc3RhYgoKICAgIGluZGV4PSQoKCAkaW5kZXggKyAxICkpCgpkb25lCgptb3VudCAtYQoAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4vZml4X2x2Ml9uZXR3b3JrLnNoAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAwMDAwNzc1ADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMDEyMQAxNDEyMDM2MjE0NwAw\nMTMzNTQAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIg\nIABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyEvYmluL2Jhc2gKCmV0aHRvb2wgLUwgZXRoMSB0eCA4IHJ4\nIDggJiYgaWZjb25maWcgZXRoMSBkb3duICYmIGlmY29uZmlnIGV0aDEgdXAKAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2xmc21hc3Rlci5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAMDAwMDc3NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDEzMDIAMTQxMjAzNjIxNDcAMDEy\nMjM0ACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAA\ncGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNoCgojIGFyZzogJDEgPSBkZXZpY2UgKGUuZy4g\nTD0vZGV2L3NkYiBMdjI9L2Rldi9udm1lMG4xKQpkZXZpY2U9JDEKbnVtX29zcz0kMgojIGRlZmF1\nbHQgb2YgMyBjb25jdXJyZW50IGhzbSByZXF1ZXN0cyBwZXIgb3NzCnJlcXNfcGVyX29zcz0kezM6\nLTN9Cgpta2ZzLmx1c3RyZSAtLWZzbmFtZT1MdXN0cmVGUyAtLW1ncyAtLW1kdCAtLW1vdW50ZnNv\ncHRpb25zPSJ1c2VyX3hhdHRyLGVycm9ycz1yZW1vdW50LXJvIiAtLWJhY2tmc3R5cGU9bGRpc2tm\ncyAtLXJlZm9ybWF0ICRkZXZpY2UgLS1pbmRleCAwIHx8IGV4aXQgMQoKbWtkaXIgL21udC9tZ3Nt\nZHMKZWNobyAiJGRldmljZSAvbW50L21nc21kcyBsdXN0cmUgbm9hdGltZSxub2RpcmF0aW1lLG5v\nYmFycmllciAwIDIiID4+IC9ldGMvZnN0YWIKbW91bnQgLWEKCiMgc2V0IHVwIGhzbQpsY3RsIHNl\ndF9wYXJhbSAtUCBtZHQuKi1NRFQwMDAwLmhzbV9jb250cm9sPWVuYWJsZWQKbGN0bCBzZXRfcGFy\nYW0gLVAgbWR0LiotTURUMDAwMC5oc20uZGVmYXVsdF9hcmNoaXZlX2lkPTEKbGN0bCBzZXRfcGFy\nYW0gbWR0LiotTURUMDAwMC5oc20ubWF4X3JlcXVlc3RzPSQoKCRudW1fb3NzICogJHJlcXNfcGVy\nX29zcykpCgojIGFsbG93IGFueSB1c2VyIGFuZCBncm91cCBpZHMgdG8gd3JpdGUKbGN0bCBzZXRf\ncGFyYW0gbWR0LiotTURUMDAwMC5pZGVudGl0eV91cGNhbGw9Tk9ORQoAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAuL2xmc2hzbS5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAMDAwMDc3NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDI3NjQAMTQxMjU1NjI2MTIAMDExNTUx\nACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1\nbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNoCgojIGFyZzogJDEgPSBsZnNzZXJ2ZXIKIyBhcmc6\nICQyID0gc3RvcmFnZSBhY2NvdW50CiMgYXJnOiAkMyA9IHN0b3JhZ2Uga2V5CiMgYXJnOiAkNCA9\nIHN0b3JhZ2UgY29udGFpbmVyCm1hc3Rlcj0iJDEiCnN0b3JhZ2VfYWNjb3VudD0iJDIiCnN0b3Jh\nZ2Vfc2FzPSIkMyIKc3RvcmFnZV9jb250YWluZXI9IiQ0IgoKbWtkaXIgLXAgL3Zhci9ydW4vbGhz\nbWQKY2htb2QgNzU1IC92YXIvcnVuL2xoc21kCgpta2RpciAtcCAvZXRjL2xoc21kCmNobW9kIDc1\nNSAvZXRjL2xoc21kCgpjYXQgPDxFT0YgPi9ldGMvbGhzbWQvYWdlbnQKIyBMdXN0cmUgTklEIGFu\nZCBmaWxlc3lzdGVtIG5hbWUgZm9yIHRoZSBmcm9udCBlbmQgZmlsZXN5c3RlbSwgdGhlIGFnZW50\nIHdpbGwgbW91bnQgdGhpcwpjbGllbnRfZGV2aWNlPSIke21hc3Rlcn1AdGNwOi9MdXN0cmVGUyIK\nCiMgRG8geW91IHdhbnQgdG8gdXNlIFMzIGFuZCBQT1NJWCwgaW4gdGhpcyBleGFtcGxlIHdlIHVz\nZSBQT1NJWAplbmFibGVkX3BsdWdpbnM9WyJsaHNtLXBsdWdpbi1heiJdCgojIyBEaXJlY3Rvcnkg\ndG8gbG9vayBmb3IgdGhlIHBsdWdpbnMKcGx1Z2luX2Rpcj0iL3Vzci9saWJleGVjL2xoc21kIgoK\nIyBUQkQsIEkgdXNlZCAxNgpoYW5kbGVyX2NvdW50PTE2CgojIFRCRApzbmFwc2hvdHMgewogICAg\nICAgIGVuYWJsZWQgPSBmYWxzZQp9CkVPRgpjaG1vZCA2MDAgL2V0Yy9saHNtZC9hZ2VudAoKY2F0\nIDw8RU9GID4vZXRjL2xoc21kL2xoc20tcGx1Z2luLWF6Cm51bV90aHJlYWRzPTE2CmF6X3N0b3Jh\nZ2VfYWNjb3VudD0iJHN0b3JhZ2VfYWNjb3VudCIKYXpfc3RvcmFnZV9zYXM9Ij8kc3RvcmFnZV9z\nYXMiCmF6X2t2X25hbWU9IiIKYXpfa3Zfc2VjcmV0X25hbWU9IiIKYmFuZHdpZHRoPTAKZXhwb3J0\ncHJlZml4PSIiCmFyY2hpdmUgImFyY2hpdmUxIiB7CiAgICBpZD0xCiAgICBudW1fdGhyZWFkcz0x\nNgogICAgcm9vdD0iIgogICAgY29tcHJlc3Npb249Im9mZiIKICAgIGNvbnRhaW5lcj0iJHN0b3Jh\nZ2VfY29udGFpbmVyIgp9CkVPRgpjaG1vZCA2MDAgL2V0Yy9saHNtZC9saHNtLXBsdWdpbi1hegoK\nY2F0IDw8RU9GID4vZXRjL3N5c3RlbWQvc3lzdGVtL2xoc21kLnNlcnZpY2UKW1VuaXRdCkRlc2Ny\naXB0aW9uPVRoZSBsaHNtZCBzZXJ2ZXIKQWZ0ZXI9c3lzbG9nLnRhcmdldCBuZXR3b3JrLnRhcmdl\ndCByZW1vdGUtZnMudGFyZ2V0IG5zcy1sb29rdXAudGFyZ2V0CgpbU2VydmljZV0KVHlwZT1zaW1w\nbGUKUElERmlsZT0vcnVuL2xoc21kLnBpZApFeGVjU3RhcnRQcmU9L2Jpbi9ta2RpciAtcCAvdmFy\nL3J1bi9saHNtZApFeGVjU3RhcnQ9L3NiaW4vbGhzbWQgLWNvbmZpZyAvZXRjL2xoc21kL2FnZW50\nClJlc3RhcnQ9YWx3YXlzCgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9G\nCmNobW9kIDYwMCAvZXRjL3N5c3RlbWQvc3lzdGVtL2xoc21kLnNlcnZpY2UKCnN5c3RlbWN0bCBk\nYWVtb24tcmVsb2FkCnN5c3RlbWN0bCBlbmFibGUgbGhzbWQKc3lzdGVtY3RsIHN0YXJ0IGxoc21k\nCgAAAAAAAAAAAAAAAC4vbGZzaW1wb3J0LnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw\nMDAwNzc1ADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMDU2NwAxNDEyNTU2MjYzMQAwMTIyNzQAIDAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABwYXVsAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAIyEvYmluL2Jhc2gKCiMgYXJnOiAkMSA9IHN0b3JhZ2UgYWNjb3VudAojIGFy\nZzogJDIgPSBzdG9yYWdlIHNhcwojIGFyZzogJDMgPSBzdG9yYWdlIGNvbnRhaW5lcgojIGFyZzog\nJDMgPSBsZnMgbW91bnQKIyBhcmc6ICQ0ID0gbHVzdHJlIG1vdW50IChkZWZhdWx0PS9sdXN0cmUp\nCnN0b3JhZ2VfYWNjb3VudD0iJDEiCnN0b3JhZ2Vfc2FzPSIkMiIKc3RvcmFnZV9jb250YWluZXI9\nIiQzIgpsZnNfbW91bnQ9JHs0Oi0vbHVzdHJlfQoKY2QgJGxmc19tb3VudApleHBvcnQgU1RPUkFH\nRV9TQVM9Ij8kc3RvcmFnZV9zYXMiCi9zYmluL2F6dXJlLWltcG9ydCAtYWNjb3VudCAke3N0b3Jh\nZ2VfYWNjb3VudH0gLWNvbnRhaW5lciAke3N0b3JhZ2VfY29udGFpbmVyfQoKAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAuL2NyZWF0ZV9yYWlkMC5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAw\nMDc3NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDE2NjAAMTQxMjAzNjIxNDcAMDEyNTY1ACAwAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAACMhL2Jpbi9iYXNoCgojIGFyZzogJDEgPSByYWlkX2RldmljZSAoZS5nLiAvZGV2\nL21kMTApCiMgYXJnOiAkKiA9IGRldmljZXMgdG8gdXNlIChjYW4gdXNlIGdsb2JiaW5nKQoKcmFp\nZF9kZXZpY2U9JDEKc2hpZnQKCmRldmljZXM9CndoaWxlICgoICIkIyIgKSk7IGRvCiAgICBkZXZp\nY2VzPSIkZGV2aWNlcyAkMSIKICAgIHNoaWZ0CmRvbmUKCmVjaG8gImRldmljZXM9JGRldmljZXMi\nCgojIHByaW50IHBhcnRpdGlvbiBpbmZvcm1hdGlvbgpwYXJ0ZWQgLXMgLS1saXN0IDI+L2Rldi9u\ndWxsCgojIGNyZWF0aW5nIHRoZSBwYXJ0aXRpb25zCmZvciBkaXNrIGluICRkZXZpY2VzOyBkbwog\nICAgZWNobyAicGFydGl0aW9uaW5nICRkaXNrIgogICAgcGFydGVkIC1zICRkaXNrICJta2xhYmVs\nIGdwdCIKICAgIHBhcnRlZCAtcyAkZGlzayAtYSBvcHRpbWFsICJta3BhcnQgcHJpbWFyeSAxIC0x\nIgogICAgcGFydGVkIC1zICRkaXNrIHByaW50CiAgICBwYXJ0ZWQgLXMgJGRpc2sgInNldCAxIHJh\naWQgb24iCmRvbmUKCiMgbWFrZSBzdXJlIGFsbCB0aGUgcGFydGl0aW9ucyBhcmUgcmVhZHkKc2xl\nZXAgMTAKIyBnZXQgdGhlIHBhcnRpdGlvbiBuYW1lcwpwYXJ0aXRpb25zPQpmb3IgZGlzayBpbiAk\nZGV2aWNlczsgZG8KICAgIHBhcnRpdGlvbnM9IiRwYXJ0aXRpb25zICQobHNibGsgLW5vIGtuYW1l\nIC1wICRkaXNrIHwgdGFpbCAtbjEpIgpkb25lCmVjaG8gInBhcnRpdGlvbnM9JHBhcnRpdGlvbnMi\nCgpuZGV2aWNlcz0kKGVjaG8gJHBhcnRpdGlvbnMgfCB3YyAtdykKCmVjaG8gImNyZWF0aW5nIHJh\naWQgZGV2aWNlIgptZGFkbSAtLWNyZWF0ZSAkcmFpZF9kZXZpY2UgLS1sZXZlbCAwIC0tcmFpZC1k\nZXZpY2VzICRuZGV2aWNlcyAkcGFydGl0aW9ucyB8fCBleGl0IDEKc2xlZXAgMTAKCm1kYWRtIC0t\ndmVyYm9zZSAtLWRldGFpbCAtLXNjYW4gPiAvZXRjL21kYWRtLmNvbmYKAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAuL2NyZWF0ZV9yYWlkMC5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc3\nNQAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDAwMDAAMTQxMjAzNjIxNDcAMDE1NTYyACAxLi9jcmVh\ndGVfcmFpZDAuc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAC4vZml4X2x2Ml9uZXR3b3JrLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwNzc1\nADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMDAwMAAxNDEyMDM2MjE0NwAwMTcxNjIAIDEuL2ZpeF9s\ndjJfbmV0d29yay5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABwYXVsAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAALi9sZnNoc20uc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA3NzUA\nMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAwMDAwADE0MTI1NTYyNjEyADAxMzUxMgAgMS4vbGZzaHNt\nLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAuL2xmc2ltcG9ydC5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc3NQAw\nMDAxNzUwADAwMDE3NTAAMDAwMDAwMDAwMDAAMTQxMjU1NjI2MzEAMDE0NzYxACAxLi9sZnNpbXBv\ncnQuc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAC4vbGZzbWFzdGVyLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwNzc1ADAw\nMDE3NTAAMDAwMTc1MAAwMDAwMDAwMDAwMAAxNDEyMDM2MjE0NwAwMTQ3MTYAIDEuL2xmc21hc3Rl\nci5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABwYXVsAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAALi9sZnNvc3Muc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA3NzUAMDAw\nMTc1MAAwMDAxNzUwADAwMDAwMDAwMDAwADE0MTIwMzYyMTQ3ADAxMzU0MAAgMS4vbGZzb3NzLnNo\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAuL2xmc3JiaC5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc3NQAwMDAx\nNzUwADAwMDE3NTAAMDAwMDAwMDAwMDAAMTQxNTEzNjMwNjEAMDEzNDU2ACAxLi9sZnNyYmguc2gA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAC4vc2V0dXBfbHVzdHJlLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwNzc1ADAwMDE3\nNTAAMDAwMTc1MAAwMDAwMDAwMDAwMAAxNDE1NDY1NzcyNwAwMTYyMzQAIDEuL3NldHVwX2x1c3Ry\nZS5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABwYXVsAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n')]",
    "copy": [
      {
        "name": "mdtDataDisks",
        "count": "[parameters('mdtNumDisks')]",
        "input": {
          "caching": "[parameters('mdtCacheOption')]",
          "managedDisk": {
            "storageAccountType": "[parameters('mdtStorageSku')]"
          },
          "createOption": "Empty",
          "lun": "[copyIndex('mdtDataDisks')]",
          "diskSizeGB": "[parameters('mdtDiskSize')]"
        }
      },
      {
        "name": "ostDataDisks",
        "count": "[parameters('ostNumDisks')]",
        "input": {
          "caching": "[parameters('ostCacheOption')]",
          "managedDisk": {
            "storageAccountType": "[parameters('ostStorageSku')]"
          },
          "createOption": "Empty",
          "lun": "[copyIndex('ostDataDisks')]",
          "diskSizeGB": "[parameters('ostDiskSize')]"
        }
      }
    ]
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-03-01",
      "name": "[concat(parameters('name'), '-NetworkInterface')]",
      "location": "[parameters('location')]",
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "properties": {
        "enableAcceleratedNetworking": true,
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "plan": "[variables('imagePlan')]",
      "zones": "[if(parameters('useAvailabilityZone'), array(format('{0}', parameters('availabilityZone'))), null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('name'), '-NetworkInterface'))]"
      ],
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('mdsSku')]"
        },
        "osProfile": {
          "computerName": "[parameters('name')]",
          "adminUsername": "[parameters('adminUser')]",
          "customData": "[base64(variables('ciScript'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUser'))]",
                  "keyData": "[parameters('rsaPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "dataDisks": "[variables('mdtDataDisks')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('name'), '-NetworkInterface'))]"
            }
          ]
        }
      }
    },
    {
      "condition": "[parameters('deployPolicyEngine')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-03-01",
      "name": "[concat(parameters('name'), '-rbh-NetworkInterface')]",
      "location": "[parameters('location')]",
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "properties": {
        "enableAcceleratedNetworking": true,
        "ipConfigurations": [
          {
            "name": "rbhIpConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "condition": "[parameters('deployPolicyEngine')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[concat(parameters('name'), '-rbh')]",
      "location": "[parameters('location')]",
      "plan": "[variables('imagePlan')]",
      "zones": "[if(parameters('useAvailabilityZone'), array(format('{0}', parameters('availabilityZone'))), null())]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('name'), '-rbh-NetworkInterface'))]"
      ],
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('rbhSku')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('name'), 'rbh')]",
          "adminUsername": "[parameters('adminUser')]",
          "customData": "[base64(variables('ciScript'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUser'))]",
                  "keyData": "[parameters('rsaPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('name'), '-rbh-NetworkInterface'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2021-07-01",
      "name": "[concat(parameters('name'), '-vmss')]",
      "location": "[parameters('location')]",
      "plan": "[variables('imagePlan')]",
      "zones": "[if(parameters('useAvailabilityZone'), array(format('{0}', parameters('availabilityZone'))), null())]",
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "sku": {
        "name": "[parameters('ossSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": "[variables('imageReference')]",
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite"
            },
            "dataDisks": "[variables('ostDataDisks')]"
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('name')]",
            "adminUsername": "[parameters('adminUser')]",
            "customData": "[base64(variables('ciScript'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUser'))]",
                    "keyData": "[parameters('rsaPublicKey')]"
                  }
                ]
              }
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(parameters('name'), '-nic')]",
                "properties": {
                  "primary": true,
                  "enableAcceleratedNetworking": true,
                  "ipConfigurations": [
                    {
                      "name": "ipConfig-vmss",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnet')]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Portal/dashboards",
      "apiVersion": "2020-09-01-preview",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "properties": {
        "lenses": [
          {
            "order": 0,
            "parts": [
              {
                "position": {
                  "x": 0,
                  "y": 0,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('name'))]"
                              },
                              "name": "Percentage CPU",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachines",
                              "metricVisualization": {
                                "displayName": "Percentage CPU",
                                "resourceDisplayName": "[parameters('name')]"
                              }
                            }
                          ],
                          "title": "MDS Percentage CPU",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 8,
                  "y": 0,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('name'))]"
                              },
                              "name": "Network In Total",
                              "aggregationType": 1,
                              "namespace": "microsoft.compute/virtualmachines",
                              "metricVisualization": {
                                "displayName": "Network In Total",
                                "resourceDisplayName": "[parameters('name')]"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('name'))]"
                              },
                              "name": "Network Out Total",
                              "aggregationType": 1,
                              "namespace": "microsoft.compute/virtualmachines",
                              "metricVisualization": {
                                "displayName": "Network Out Total",
                                "resourceDisplayName": "[parameters('name')]"
                              }
                            }
                          ],
                          "title": "MDS Network Usage",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 16,
                  "y": 0,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('name'))]"
                              },
                              "name": "VM Uncached Bandwidth Consumed Percentage",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachines",
                              "metricVisualization": {
                                "displayName": "VM Uncached Bandwidth Consumed Percentage",
                                "resourceDisplayName": "[parameters('name')]"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('name'))]"
                              },
                              "name": "VM Uncached IOPS Consumed Percentage",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachines",
                              "metricVisualization": {
                                "displayName": "VM Uncached IOPS Consumed Percentage",
                                "resourceDisplayName": "[parameters('name')]"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('name'))]"
                              },
                              "name": "VM Cached Bandwidth Consumed Percentage",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachines",
                              "metricVisualization": {
                                "displayName": "VM Cached Bandwidth Consumed Percentage",
                                "resourceDisplayName": "[parameters('name')]"
                              }
                            },
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('name'))]"
                              },
                              "name": "VM Cached IOPS Consumed Percentage",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachines",
                              "metricVisualization": {
                                "displayName": "VM Cached IOPS Consumed Percentage",
                                "resourceDisplayName": "[parameters('name')]"
                              }
                            }
                          ],
                          "title": "MDS Data Disk Bandwidth/IOPS Consumed Percentages",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 4,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', concat(parameters('name'), '-vmss'))]"
                              },
                              "name": "Percentage CPU",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachinescalesets",
                              "metricVisualization": {
                                "displayName": "Percentage CPU",
                                "resourceDisplayName": "[concat(parameters('name'), '-vmss')]"
                              }
                            }
                          ],
                          "title": "OSS Percentage CPU",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "VMName",
                            "sort": 2,
                            "top": 32
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 8,
                  "y": 4,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', concat(parameters('name'), '-vmss'))]"
                              },
                              "name": "Network In Total",
                              "aggregationType": 1,
                              "namespace": "microsoft.compute/virtualmachinescalesets",
                              "metricVisualization": {
                                "displayName": "Network In Total",
                                "resourceDisplayName": "[concat(parameters('name'), '-vmss')]"
                              }
                            }
                          ],
                          "title": "OSS Network in",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "VMName",
                            "sort": 2,
                            "top": 32
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 16,
                  "y": 4,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', concat(parameters('name'), '-vmss'))]"
                              },
                              "name": "Network Out Total",
                              "aggregationType": 1,
                              "namespace": "microsoft.compute/virtualmachinescalesets",
                              "metricVisualization": {
                                "displayName": "Network Out Total",
                                "resourceDisplayName": "[concat(parameters('name'), '-vmss')]"
                              }
                            }
                          ],
                          "title": "OSS Network Out",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "VMName",
                            "sort": 2,
                            "top": 32
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 8,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', concat(parameters('name'), '-vmss'))]"
                              },
                              "name": "Disk Read Bytes",
                              "aggregationType": 1,
                              "namespace": "microsoft.compute/virtualmachinescalesets",
                              "metricVisualization": {
                                "displayName": "Disk Read Bytes",
                                "resourceDisplayName": "[concat(parameters('name'), '-vmss')]"
                              }
                            }
                          ],
                          "title": "OSS Disk Read Bytes",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "VMName",
                            "sort": 2,
                            "top": 32
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 8,
                  "y": 8,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', concat(parameters('name'), '-vmss'))]"
                              },
                              "name": "VM Uncached Bandwidth Consumed Percentage",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachinescalesets",
                              "metricVisualization": {
                                "displayName": "VM Uncached Bandwidth Consumed Percentage",
                                "resourceDisplayName": "[concat(parameters('name'), '-vmss')]"
                              }
                            }
                          ],
                          "title": "OSS Data Disk Uncached Bandwidth Consumed Percentage",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "VMName",
                            "sort": 2,
                            "top": 32
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 16,
                  "y": 8,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', concat(parameters('name'), '-vmss'))]"
                              },
                              "name": "VM Cached Bandwidth Consumed Percentage",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachinescalesets",
                              "metricVisualization": {
                                "displayName": "VM Cached Bandwidth Consumed Percentage",
                                "resourceDisplayName": "[concat(parameters('name'), '-vmss')]"
                              }
                            }
                          ],
                          "title": "OSS Cached Bandwidth Consumed Percentage",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "VMName",
                            "sort": 2,
                            "top": 32
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 0,
                  "y": 12,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', concat(parameters('name'), '-vmss'))]"
                              },
                              "name": "Disk Write Bytes",
                              "aggregationType": 1,
                              "namespace": "microsoft.compute/virtualmachinescalesets",
                              "metricVisualization": {
                                "displayName": "Disk Write Bytes",
                                "resourceDisplayName": "[concat(parameters('name'), '-vmss')]"
                              }
                            }
                          ],
                          "title": "OSS Disk Write Bytes",
                          "titleKind": 1,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "VMName",
                            "sort": 2,
                            "top": 32
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 8,
                  "y": 12,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', concat(parameters('name'), '-vmss'))]"
                              },
                              "name": "VM Uncached IOPS Consumed Percentage",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachinescalesets",
                              "metricVisualization": {
                                "displayName": "VM Uncached IOPS Consumed Percentage",
                                "resourceDisplayName": "[concat(parameters('name'), '-vmss')]"
                              }
                            }
                          ],
                          "title": "OSS Data Disk Uncached IOPS Consumed Percentage",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "VMName",
                            "sort": 2,
                            "top": 32
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "position": {
                  "x": 16,
                  "y": 12,
                  "colSpan": 8,
                  "rowSpan": 4
                },
                "metadata": {
                  "inputs": [
                    {
                      "name": "options",
                      "isOptional": true
                    },
                    {
                      "name": "sharedTimeRange",
                      "isOptional": true
                    }
                  ],
                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                  "settings": {
                    "content": {
                      "options": {
                        "chart": {
                          "metrics": [
                            {
                              "resourceMetadata": {
                                "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', concat(parameters('name'), '-vmss'))]"
                              },
                              "name": "VM Cached IOPS Consumed Percentage",
                              "aggregationType": 4,
                              "namespace": "microsoft.compute/virtualmachinescalesets",
                              "metricVisualization": {
                                "displayName": "VM Cached IOPS Consumed Percentage",
                                "resourceDisplayName": "[concat(parameters('name'), '-vmss')]"
                              }
                            }
                          ],
                          "title": "OSS Cached IOPS Consumed Percentage",
                          "titleKind": 2,
                          "visualization": {
                            "chartType": 2,
                            "legendVisualization": {
                              "isVisible": true,
                              "position": 2,
                              "hideSubtitle": false
                            },
                            "axisVisualization": {
                              "x": {
                                "isVisible": true,
                                "axisType": 2
                              },
                              "y": {
                                "isVisible": true,
                                "axisType": 1
                              }
                            },
                            "disablePinning": true
                          },
                          "grouping": {
                            "dimension": "VMName",
                            "sort": 2,
                            "top": 32
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        ],
        "metadata": {
          "model": {
            "timeRange": {
              "value": {
                "relative": {
                  "duration": 24,
                  "timeUnit": 1
                }
              },
              "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
            },
            "filterLocale": {
              "value": "en-us"
            },
            "filters": {
              "value": {
                "MsPortalFx_TimeRange": {
                  "model": {
                    "format": "utc",
                    "granularity": "auto",
                    "relative": "60m"
                  },
                  "displayCache": {
                    "name": "UTC Time",
                    "value": "Past hour"
                  },
                  "filteredPartIds": [
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e40ef",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e409e",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e4385",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e460e",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e44c4",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e4632",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e463e",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e4101",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e4379",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e4664",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e410d",
                    "StartboardPart-MonitorChartPart-9b470636-c72a-4827-ae79-0c72c28e439b"
                  ]
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('name'))]",
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', format('{0}-vmss', parameters('name')))]"
      ]
    }
  ],
  "outputs": {}
}
