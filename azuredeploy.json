{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "name": {
      "maxLength": 20,
      "type": "String",
      "metadata": {
        "description": "The name for the Lustre filesystem."
      }
    },
    "mdsSku": {
      "defaultValue": "Standard_D8s_v3",
      "type": "String",
      "metadata": {
        "description": "The SKU for the Lustre MDS."
      }
    },
    "ossSku": {
      "defaultValue": "Standard_L8s_v2",
      "type": "String",
      "metadata": {
        "description": "The VM type for the Lustre nodes."
      }
    },
    "instanceCount": {
      "minValue": 1,
      "maxValue": 300,
      "type": "Int",
      "metadata": {
        "description": "Number of additional Lustre nodes."
      }
    },
    "adminUser": {
      "type": "String",
      "metadata": {
        "description": "The username for the Lustre filesystem."
      }
    },
    "rsaPublicKey": {
      "type": "String",
      "metadata": {
        "description": "The RSA public key to access the nodes."
      }
    },
    "existingVnetResourceGroupName": {
      "type": "String",
      "metadata": {
        "description": "Name of the resource group for the existing virtual network to deploy the scale set into."
      }
    },
    "existingVnetName": {
      "type": "String",
      "metadata": {
        "description": "Name of the existing virtual network to deploy the scale set into."
      }
    },
    "existingSubnetName": {
      "type": "String",
      "metadata": {
        "description": "Name of the existing subnet to deploy the scale set into."
      }
    },
    "storageAccount": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Optional. The storage account to use (leave blank to disable HSM)"
      }
    },
    "storageContainer": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "The storage container to use for archive"
      }
    },
    "storageSas": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "A SAS key for the storage account"
      }
    },
    "logAnalyticsAccount": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Optional. The log analytics account to use (leave blank to disable logging)"
      }
    },
    "logAnalyticsWorkspaceId": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": " The log analytics workspace id"
      }
    },
    "logAnalyticsKey": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "The log analytics account key"
      }
    },
    "mdtStorageSku": {
      "defaultValue": "Premium_LRS",
      "type": "String",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "mdtCacheOption": {
      "defaultValue": "ReadWrite",
      "type": "String",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "mdtDiskSize": {
      "defaultValue": 1024,
      "type": "Int",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "mdtNumDisks": {
      "defaultValue": 2,
      "type": "Int",
      "metadata": {
        "description": "The number of disks in the MDT RAID"
      }
    },
    "ostStorageSku": {
      "defaultValue": "Premium_LRS",
      "type": "String",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "ostCacheOption": {
      "defaultValue": "None",
      "type": "String",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "ostDiskSize": {
      "defaultValue": 1024,
      "type": "Int",
      "metadata": {
        "description": "The size of the OSS disks"
      }
    },
    "ostNumDisks": {
      "defaultValue": 6,
      "type": "Int",
      "metadata": {
        "description": "The number of disks on each OSS"
      }
    },
    "ossDiskSetup": {
      "defaultValue": "raid",
      "allowedValues": [
        "raid",
        "separate"
      ],
      "type": "String",
      "metadata": {
        "description": "Create a single RAID or use multiple OSTs"
      }
    }
  },
  "variables": {
    "tagname": "[concat('LustreFS-', parameters('name'))]",
    "subnet": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubNetName'))]",
    "imageReference": {
      "publisher": "azhpc",
      "offer": "azurehpc-lustre",
      "sku": "azurehpc-lustre-2_12",
      "version": "latest"
    },
    "imagePlan": {
      "publisher": "azhpc",
      "product": "azurehpc-lustre",
      "name": "azurehpc-lustre-2_12"
    },
    "ciScript": "[concat('#!/bin/bash\nset --',' \"',parameters('name'),'\"',' \"',parameters('instanceCount'),'\"',' \"',parameters('storageAccount'),'\"',' \"',parameters('storageSas'),'\"',' \"',parameters('storageContainer'),'\"',' \"',parameters('logAnalyticsAccount'),'\"',' \"',parameters('logAnalyticsWorkspaceId'),'\"',' \"',parameters('logAnalyticsKey'),'\"',' \"',parameters('ossDiskSetup'),'\"','\n','# This script was generated using Makeself 2.4.2\n# The license covering this archive and its contents, if any, is wholly independent of the Makeself license (GPL)\nORIG_UMASK=`umask`\nif test \"n\" = n; then\n    umask 077\nfi\n\nCRCsum=\"191385996\"\nMD5=\"fce072a6b21b5a8c5d9815cf54a3ac5b\"\nSHA=\"0000000000000000000000000000000000000000000000000000000000000000\"\nTMPROOT=${TMPDIR:=/tmp}\nUSER_PWD=\"$PWD\"\nexport USER_PWD\nARCHIVE_DIR=/usr/bin\nexport ARCHIVE_DIR\n\nlabel=\"Cloudinit script\"\nscript=\"./setup_lustre.sh\"\nscriptargs=\"\"\ncleanup_script=\"\"\nlicensetxt=\"\"\nhelpheader=''''\ntargetdir=\"scripts\"\nfilesizes=\"41499\"\nkeep=\"n\"\nnooverwrite=\"n\"\nquiet=\"n\"\naccept=\"n\"\nnodiskspace=\"n\"\nexport_conf=\"n\"\ndecrypt_cmd=\"\"\nskip=\"667\"\n\nprint_cmd_arg=\"\"\nif type printf > /dev/null; then\n    print_cmd=\"printf\"\nelif test -x /usr/ucb/echo; then\n    print_cmd=\"/usr/ucb/echo\"\nelse\n    print_cmd=\"echo\"\nfi\n\nif test -d /usr/xpg4/bin; then\n    PATH=/usr/xpg4/bin:$PATH\n    export PATH\nfi\n\nif test -d /usr/sfw/bin; then\n    PATH=$PATH:/usr/sfw/bin\n    export PATH\nfi\n\nunset CDPATH\n\nMS_Printf()\n{\n    $print_cmd $print_cmd_arg \"$1\"\n}\n\nMS_PrintLicense()\n{\n  if test x\"$licensetxt\" != x; then\n    if test x\"$accept\" = xy; then\n      echo \"$licensetxt\"\n    else\n      echo \"$licensetxt\" | more\n    fi\n    if test x\"$accept\" != xy; then\n      while true\n      do\n        MS_Printf \"Please type y to accept, n otherwise: \"\n        read yn\n        if test x\"$yn\" = xn; then\n          keep=n\n          eval $finish; exit 1\n          break;\n        elif test x\"$yn\" = xy; then\n          break;\n        fi\n      done\n    fi\n  fi\n}\n\nMS_diskspace()\n{\n\t(\n\tdf -kP \"$1\" | tail -1 | awk ''{ if ($4 ~ /%/) {print $3} else {print $4} }''\n\t)\n}\n\nMS_dd()\n{\n    blocks=`expr $3 / 1024`\n    bytes=`expr $3 % 1024`\n    dd if=\"$1\" ibs=$2 skip=1 obs=1024 conv=sync 2> /dev/null | \\\n    { test $blocks -gt 0 && dd ibs=1024 obs=1024 count=$blocks ; \\\n      test $bytes  -gt 0 && dd ibs=1 obs=1024 count=$bytes ; } 2> /dev/null\n}\n\nMS_dd_Progress()\n{\n    if test x\"$noprogress\" = xy; then\n        MS_dd \"$@\"\n        return $?\n    fi\n    file=\"$1\"\n    offset=$2\n    length=$3\n    pos=0\n    bsize=4194304\n    while test $bsize -gt $length; do\n        bsize=`expr $bsize / 4`\n    done\n    blocks=`expr $length / $bsize`\n    bytes=`expr $length % $bsize`\n    (\n        dd ibs=$offset skip=1 count=0 2>/dev/null\n        pos=`expr $pos \\+ $bsize`\n        MS_Printf \"     0%% \" 1>&2\n        if test $blocks -gt 0; then\n            while test $pos -le $length; do\n                dd bs=$bsize count=1 2>/dev/null\n                pcent=`expr $length / 100`\n                pcent=`expr $pos / $pcent`\n                if test $pcent -lt 100; then\n                    MS_Printf \"\\b\\b\\b\\b\\b\\b\\b\" 1>&2\n                    if test $pcent -lt 10; then\n                        MS_Printf \"    $pcent%% \" 1>&2\n                    else\n                        MS_Printf \"   $pcent%% \" 1>&2\n                    fi\n                fi\n                pos=`expr $pos \\+ $bsize`\n            done\n        fi\n        if test $bytes -gt 0; then\n            dd bs=$bytes count=1 2>/dev/null\n        fi\n        MS_Printf \"\\b\\b\\b\\b\\b\\b\\b\" 1>&2\n        MS_Printf \" 100%%  \" 1>&2\n    ) < \"$file\"\n}\n\nMS_Help()\n{\n    cat << EOH >&2\n${helpheader}Makeself version 2.4.2\n 1) Getting help or info about $0 :\n  $0 --help   Print this message\n  $0 --info   Print embedded info : title, default target directory, embedded script ...\n  $0 --lsm    Print embedded lsm entry (or no LSM)\n  $0 --list   Print the list of files in the archive\n  $0 --check  Checks integrity of the archive\n\n 2) Running $0 :\n  $0 [options] [--] [additional arguments to embedded script]\n  with following options (in that order)\n  --confirm             Ask before running embedded script\n  --quiet               Do not print anything except error messages\n  --accept              Accept the license\n  --noexec              Do not run embedded script (implies --noexec-cleanup)\n  --noexec-cleanup      Do not run embedded cleanup script\n  --keep                Do not erase target directory after running\n                        the embedded script\n  --noprogress          Do not show the progress during the decompression\n  --nox11               Do not spawn an xterm\n  --nochown             Do not give the target folder to the current user\n  --chown               Give the target folder to the current user recursively\n  --nodiskspace         Do not check for available disk space\n  --target dir          Extract directly to a target directory (absolute or relative)\n                        This directory may undergo recursive chown (see --nochown).\n  --tar arg1 [arg2 ...] Access the contents of the archive through the tar command\n  --ssl-pass-src src    Use the given src as the source of password to decrypt the data\n                        using OpenSSL. See \"PASS PHRASE ARGUMENTS\" in man openssl.\n                        Default is to prompt the user to enter decryption password\n                        on the current terminal.\n  --cleanup-args args   Arguments to the cleanup script. Wrap in quotes to provide\n                        multiple arguments.\n  --                    Following arguments will be passed to the embedded script\nEOH\n}\n\nMS_Check()\n{\n    OLD_PATH=\"$PATH\"\n    PATH=${GUESS_MD5_PATH:-\"$OLD_PATH:/bin:/usr/bin:/sbin:/usr/local/ssl/bin:/usr/local/bin:/opt/openssl/bin\"}\n\tMD5_ARG=\"\"\n    MD5_PATH=`exec <&- 2>&-; which md5sum || command -v md5sum || type md5sum`\n    test -x \"$MD5_PATH\" || MD5_PATH=`exec <&- 2>&-; which md5 || command -v md5 || type md5`\n    test -x \"$MD5_PATH\" || MD5_PATH=`exec <&- 2>&-; which digest || command -v digest || type digest`\n    PATH=\"$OLD_PATH\"\n\n    SHA_PATH=`exec <&- 2>&-; which shasum || command -v shasum || type shasum`\n    test -x \"$SHA_PATH\" || SHA_PATH=`exec <&- 2>&-; which sha256sum || command -v sha256sum || type sha256sum`\n\n    if test x\"$quiet\" = xn; then\n\t\tMS_Printf \"Verifying archive integrity...\"\n    fi\n    offset=`head -n \"$skip\" \"$1\" | wc -c | tr -d \" \"`\n    verb=$2\n    i=1\n    for s in $filesizes\n    do\n\t\tcrc=`echo $CRCsum | cut -d\" \" -f$i`\n\t\tif test -x \"$SHA_PATH\"; then\n\t\t\tif test x\"`basename $SHA_PATH`\" = xshasum; then\n\t\t\t\tSHA_ARG=\"-a 256\"\n\t\t\tfi\n\t\t\tsha=`echo $SHA | cut -d\" \" -f$i`\n\t\t\tif test x\"$sha\" = x0000000000000000000000000000000000000000000000000000000000000000; then\n\t\t\t\ttest x\"$verb\" = xy && echo \" $1 does not contain an embedded SHA256 checksum.\" >&2\n\t\t\telse\n\t\t\t\tshasum=`MS_dd_Progress \"$1\" $offset $s | eval \"$SHA_PATH $SHA_ARG\" | cut -b-64`;\n\t\t\t\tif test x\"$shasum\" != x\"$sha\"; then\n\t\t\t\t\techo \"Error in SHA256 checksums: $shasum is different from $sha\" >&2\n\t\t\t\t\texit 2\n\t\t\t\telif test x\"$quiet\" = xn; then\n\t\t\t\t\tMS_Printf \" SHA256 checksums are OK.\" >&2\n\t\t\t\tfi\n\t\t\t\tcrc=\"0000000000\";\n\t\t\tfi\n\t\tfi\n\t\tif test -x \"$MD5_PATH\"; then\n\t\t\tif test x\"`basename $MD5_PATH`\" = xdigest; then\n\t\t\t\tMD5_ARG=\"-a md5\"\n\t\t\tfi\n\t\t\tmd5=`echo $MD5 | cut -d\" \" -f$i`\n\t\t\tif test x\"$md5\" = x00000000000000000000000000000000; then\n\t\t\t\ttest x\"$verb\" = xy && echo \" $1 does not contain an embedded MD5 checksum.\" >&2\n\t\t\telse\n\t\t\t\tmd5sum=`MS_dd_Progress \"$1\" $offset $s | eval \"$MD5_PATH $MD5_ARG\" | cut -b-32`;\n\t\t\t\tif test x\"$md5sum\" != x\"$md5\"; then\n\t\t\t\t\techo \"Error in MD5 checksums: $md5sum is different from $md5\" >&2\n\t\t\t\t\texit 2\n\t\t\t\telif test x\"$quiet\" = xn; then\n\t\t\t\t\tMS_Printf \" MD5 checksums are OK.\" >&2\n\t\t\t\tfi\n\t\t\t\tcrc=\"0000000000\"; verb=n\n\t\t\tfi\n\t\tfi\n\t\tif test x\"$crc\" = x0000000000; then\n\t\t\ttest x\"$verb\" = xy && echo \" $1 does not contain a CRC checksum.\" >&2\n\t\telse\n\t\t\tsum1=`MS_dd_Progress \"$1\" $offset $s | CMD_ENV=xpg4 cksum | awk ''{print $1}''`\n\t\t\tif test x\"$sum1\" != x\"$crc\"; then\n\t\t\t\techo \"Error in checksums: $sum1 is different from $crc\" >&2\n\t\t\t\texit 2\n\t\t\telif test x\"$quiet\" = xn; then\n\t\t\t\tMS_Printf \" CRC checksums are OK.\" >&2\n\t\t\tfi\n\t\tfi\n\t\ti=`expr $i + 1`\n\t\toffset=`expr $offset + $s`\n    done\n    if test x\"$quiet\" = xn; then\n\t\techo \" All good.\"\n    fi\n}\n\nMS_Decompress()\n{\n    if test x\"$decrypt_cmd\" != x\"\"; then\n        { eval \"$decrypt_cmd\" || echo \" ... Decryption failed.\" >&2; } | eval \"base64 --decode -i -\"\n    else\n        eval \"base64 --decode -i -\"\n    fi\n    \n    if test $? -ne 0; then\n        echo \" ... Decompression failed.\" >&2\n    fi\n}\n\nUnTAR()\n{\n    if test x\"$quiet\" = xn; then\n\t\ttar $1vf -  2>&1 || { echo \" ... Extraction failed.\" > /dev/tty; kill -15 $$; }\n    else\n\t\ttar $1f -  2>&1 || { echo Extraction failed. > /dev/tty; kill -15 $$; }\n    fi\n}\n\nMS_exec_cleanup() {\n    if test x\"$cleanup\" = xy && test x\"$cleanup_script\" != x\"\"; then\n        cleanup=n\n        cd \"$tmpdir\"\n        eval \"\\\"$cleanup_script\\\" $scriptargs $cleanupargs\"\n    fi\n}\n\nMS_cleanup()\n{\n    echo ''Signal caught, cleaning up'' >&2\n    MS_exec_cleanup\n    cd \"$TMPROOT\"\n    rm -rf \"$tmpdir\"\n    eval $finish; exit 15\n}\n\nfinish=true\nxterm_loop=\nnoprogress=n\nnox11=n\ncopy=none\nownership=n\nverbose=n\ncleanup=y\ncleanupargs=\n\ninitargs=\"$@\"\n\nwhile true\ndo\n    case \"$1\" in\n    -h | --help)\n\tMS_Help\n\texit 0\n\t;;\n    -q | --quiet)\n\tquiet=y\n\tnoprogress=y\n\tshift\n\t;;\n\t--accept)\n\taccept=y\n\tshift\n\t;;\n    --info)\n\techo Identification: \"$label\"\n\techo Target directory: \"$targetdir\"\n\techo Uncompressed size: 32 KB\n\techo Compression: base64\n\tif test x\"n\" != x\"\"; then\n\t    echo Encryption: n\n\tfi\n\techo Date of packaging: Mon Sep 13 12:20:29 BST 2021\n\techo Built with Makeself version 2.4.2 on \n\techo Build command was: \"/usr/bin/makeself \\\\\n    \\\"--base64\\\" \\\\\n    \\\"scripts\\\" \\\\\n    \\\"cloudinit_2021-09-13_12-20-29.sh\\\" \\\\\n    \\\"Cloudinit script\\\" \\\\\n    \\\"./setup_lustre.sh\\\"\"\n\tif test x\"$script\" != x; then\n\t    echo Script run after extraction:\n\t    echo \"    \" $script $scriptargs\n\tfi\n\tif test x\"\" = xcopy; then\n\t\techo \"Archive will copy itself to a temporary location\"\n\tfi\n\tif test x\"n\" = xy; then\n\t\techo \"Root permissions required for extraction\"\n\tfi\n\tif test x\"n\" = xy; then\n\t    echo \"directory $targetdir is permanent\"\n\telse\n\t    echo \"$targetdir will be removed after extraction\"\n\tfi\n\texit 0\n\t;;\n    --dumpconf)\n\techo LABEL=\\\"$label\\\"\n\techo SCRIPT=\\\"$script\\\"\n\techo SCRIPTARGS=\\\"$scriptargs\\\"\n    echo CLEANUPSCRIPT=\\\"$cleanup_script\\\"\n\techo archdirname=\\\"scripts\\\"\n\techo KEEP=n\n\techo NOOVERWRITE=n\n\techo COMPRESS=base64\n\techo filesizes=\\\"$filesizes\\\"\n\techo CRCsum=\\\"$CRCsum\\\"\n\techo MD5sum=\\\"$MD5sum\\\"\n\techo SHAsum=\\\"$SHAsum\\\"\n\techo SKIP=\\\"$skip\\\"\n\texit 0\n\t;;\n    --lsm)\ncat << EOLSM\nNo LSM.\nEOLSM\n\texit 0\n\t;;\n    --list)\n\techo Target directory: $targetdir\n\toffset=`head -n \"$skip\" \"$0\" | wc -c | tr -d \" \"`\n\tfor s in $filesizes\n\tdo\n\t    MS_dd \"$0\" $offset $s | MS_Decompress | UnTAR t\n\t    offset=`expr $offset + $s`\n\tdone\n\texit 0\n\t;;\n\t--tar)\n\toffset=`head -n \"$skip\" \"$0\" | wc -c | tr -d \" \"`\n\targ1=\"$2\"\n    if ! shift 2; then MS_Help; exit 1; fi\n\tfor s in $filesizes\n\tdo\n\t    MS_dd \"$0\" $offset $s | MS_Decompress | tar \"$arg1\" - \"$@\"\n\t    offset=`expr $offset + $s`\n\tdone\n\texit 0\n\t;;\n    --check)\n\tMS_Check \"$0\" y\n\texit 0\n\t;;\n    --confirm)\n\tverbose=y\n\tshift\n\t;;\n\t--noexec)\n\tscript=\"\"\n    cleanup_script=\"\"\n\tshift\n\t;;\n    --noexec-cleanup)\n    cleanup_script=\"\"\n    shift\n    ;;\n    --keep)\n\tkeep=y\n\tshift\n\t;;\n    --target)\n\tkeep=y\n\ttargetdir=\"${2:-.}\"\n    if ! shift 2; then MS_Help; exit 1; fi\n\t;;\n    --noprogress)\n\tnoprogress=y\n\tshift\n\t;;\n    --nox11)\n\tnox11=y\n\tshift\n\t;;\n    --nochown)\n\townership=n\n\tshift\n\t;;\n    --chown)\n        ownership=y\n        shift\n        ;;\n    --nodiskspace)\n\tnodiskspace=y\n\tshift\n\t;;\n    --xwin)\n\tif test \"n\" = n; then\n\t\tfinish=\"echo Press Return to close this window...; read junk\"\n\tfi\n\txterm_loop=1\n\tshift\n\t;;\n    --phase2)\n\tcopy=phase2\n\tshift\n\t;;\n\t--ssl-pass-src)\n\tif test x\"n\" != x\"openssl\"; then\n\t    echo \"Invalid option --ssl-pass-src: $0 was not encrypted with OpenSSL!\" >&2\n\t    exit 1\n\tfi\n\tdecrypt_cmd=\"$decrypt_cmd -pass $2\"\n\tif ! shift 2; then MS_Help; exit 1; fi\n\t;;\n    --cleanup-args)\n    cleanupargs=\"$2\"\n    if ! shift 2; then MS_help; exit 1; fi\n    ;;\n    --)\n\tshift\n\tbreak ;;\n    -*)\n\techo Unrecognized flag : \"$1\" >&2\n\tMS_Help\n\texit 1\n\t;;\n    *)\n\tbreak ;;\n    esac\ndone\n\nif test x\"$quiet\" = xy -a x\"$verbose\" = xy; then\n\techo Cannot be verbose and quiet at the same time. >&2\n\texit 1\nfi\n\nif test x\"n\" = xy -a `id -u` -ne 0; then\n\techo \"Administrative privileges required for this archive (use su or sudo)\" >&2\n\texit 1\t\nfi\n\nif test x\"$copy\" \\!= xphase2; then\n    MS_PrintLicense\nfi\n\ncase \"$copy\" in\ncopy)\n    tmpdir=\"$TMPROOT\"/makeself.$RANDOM.`date +\"%y%m%d%H%M%S\"`.$$\n    mkdir \"$tmpdir\" || {\n\techo \"Could not create temporary directory $tmpdir\" >&2\n\texit 1\n    }\n    SCRIPT_COPY=\"$tmpdir/makeself\"\n    echo \"Copying to a temporary location...\" >&2\n    cp \"$0\" \"$SCRIPT_COPY\"\n    chmod +x \"$SCRIPT_COPY\"\n    cd \"$TMPROOT\"\n    exec \"$SCRIPT_COPY\" --phase2 -- $initargs\n    ;;\nphase2)\n    finish=\"$finish ; rm -rf `dirname $0`\"\n    ;;\nesac\n\nif test x\"$nox11\" = xn; then\n    if tty -s; then                 # Do we have a terminal?\n\t:\n    else\n        if test x\"$DISPLAY\" != x -a x\"$xterm_loop\" = x; then  # No, but do we have X?\n            if xset q > /dev/null 2>&1; then # Check for valid DISPLAY variable\n                GUESS_XTERMS=\"xterm gnome-terminal rxvt dtterm eterm Eterm xfce4-terminal lxterminal kvt konsole aterm terminology\"\n                for a in $GUESS_XTERMS; do\n                    if type $a >/dev/null 2>&1; then\n                        XTERM=$a\n                        break\n                    fi\n                done\n                chmod a+x $0 || echo Please add execution rights on $0\n                if test `echo \"$0\" | cut -c1` = \"/\"; then # Spawn a terminal!\n                    exec $XTERM -e \"$0 --xwin $initargs\"\n                else\n                    exec $XTERM -e \"./$0 --xwin $initargs\"\n                fi\n            fi\n        fi\n    fi\nfi\n\nif test x\"$targetdir\" = x.; then\n    tmpdir=\".\"\nelse\n    if test x\"$keep\" = xy; then\n\tif test x\"$nooverwrite\" = xy && test -d \"$targetdir\"; then\n            echo \"Target directory $targetdir already exists, aborting.\" >&2\n            exit 1\n\tfi\n\tif test x\"$quiet\" = xn; then\n\t    echo \"Creating directory $targetdir\" >&2\n\tfi\n\ttmpdir=\"$targetdir\"\n\tdashp=\"-p\"\n    else\n\ttmpdir=\"$TMPROOT/selfgz$$$RANDOM\"\n\tdashp=\"\"\n    fi\n    mkdir $dashp \"$tmpdir\" || {\n\techo ''Cannot create target directory'' $tmpdir >&2\n\techo ''You should try option --target dir'' >&2\n\teval $finish\n\texit 1\n    }\nfi\n\nlocation=\"`pwd`\"\nif test x\"$SETUP_NOCHECK\" != x1; then\n    MS_Check \"$0\"\nfi\noffset=`head -n \"$skip\" \"$0\" | wc -c | tr -d \" \"`\n\nif test x\"$verbose\" = xy; then\n\tMS_Printf \"About to extract 32 KB in $tmpdir ... Proceed ? [Y/n] \"\n\tread yn\n\tif test x\"$yn\" = xn; then\n\t\teval $finish; exit 1\n\tfi\nfi\n\nif test x\"$quiet\" = xn; then\n    # Decrypting with openssl will ask for password,\n    # the prompt needs to start on new line\n\tif test x\"n\" = x\"openssl\"; then\n\t    echo \"Decrypting and uncompressing $label...\"\n\telse\n        MS_Printf \"Uncompressing $label\"\n\tfi\nfi\nres=3\nif test x\"$keep\" = xn; then\n    trap MS_cleanup 1 2 3 15\nfi\n\nif test x\"$nodiskspace\" = xn; then\n    leftspace=`MS_diskspace \"$tmpdir\"`\n    if test -n \"$leftspace\"; then\n        if test \"$leftspace\" -lt 32; then\n            echo\n            echo \"Not enough space left in \"`dirname $tmpdir`\" ($leftspace KB) to decompress $0 (32 KB)\" >&2\n            echo \"Use --nodiskspace option to skip this check and proceed anyway\" >&2\n            if test x\"$keep\" = xn; then\n                echo \"Consider setting TMPDIR to a directory with more free space.\"\n            fi\n            eval $finish; exit 1\n        fi\n    fi\nfi\n\nfor s in $filesizes\ndo\n    if MS_dd_Progress \"$0\" $offset $s | MS_Decompress | ( cd \"$tmpdir\"; umask $ORIG_UMASK ; UnTAR xp ) 1>/dev/null; then\n\t\tif test x\"$ownership\" = xy; then\n\t\t\t(cd \"$tmpdir\"; chown -R `id -u` .;  chgrp -R `id -g` .)\n\t\tfi\n    else\n\t\techo >&2\n\t\techo \"Unable to decompress $0\" >&2\n\t\teval $finish; exit 1\n    fi\n    offset=`expr $offset + $s`\ndone\nif test x\"$quiet\" = xn; then\n\techo\nfi\n\ncd \"$tmpdir\"\nres=0\nif test x\"$script\" != x; then\n    if test x\"$export_conf\" = x\"y\"; then\n        MS_BUNDLE=\"$0\"\n        MS_LABEL=\"$label\"\n        MS_SCRIPT=\"$script\"\n        MS_SCRIPTARGS=\"$scriptargs\"\n        MS_ARCHDIRNAME=\"$archdirname\"\n        MS_KEEP=\"$KEEP\"\n        MS_NOOVERWRITE=\"$NOOVERWRITE\"\n        MS_COMPRESS=\"$COMPRESS\"\n        MS_CLEANUP=\"$cleanup\"\n        export MS_BUNDLE MS_LABEL MS_SCRIPT MS_SCRIPTARGS\n        export MS_ARCHDIRNAME MS_KEEP MS_NOOVERWRITE MS_COMPRESS\n    fi\n\n    if test x\"$verbose\" = x\"y\"; then\n\t\tMS_Printf \"OK to execute: $script $scriptargs $* ? [Y/n] \"\n\t\tread yn\n\t\tif test x\"$yn\" = x -o x\"$yn\" = xy -o x\"$yn\" = xY; then\n\t\t\teval \"\\\"$script\\\" $scriptargs \\\"\\$@\\\"\"; res=$?;\n\t\tfi\n    else\n\t\teval \"\\\"$script\\\" $scriptargs \\\"\\$@\\\"\"; res=$?\n    fi\n    if test \"$res\" -ne 0; then\n\t\ttest x\"$verbose\" = xy && echo \"The program ''$script'' returned an error code ($res)\" >&2\n    fi\nfi\n\nMS_exec_cleanup\n\nif test x\"$keep\" = xn; then\n    cd \"$TMPROOT\"\n    rm -rf \"$tmpdir\"\nfi\neval $finish; exit $res\nLi8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA3NzUAMDAwMTc1\nMAAwMDAxNzUwADAwMDAwMDAwMDAwADE0MTE1NzIzNjI3ADAwNzcxMQAgNQAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu\nL3NldHVwX2x1c3RyZS5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc3NQAwMDAxNzUw\nADAwMDE3NTAAMDAwMDAwMDUyNDAAMTQxMTYxNTIzMzAAMDEyNzczACAwAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMh\nL2Jpbi9iYXNoCgpleGVjID4gL3Zhci9sb2cvc2V0dXBfbHVzdHJlLmxvZyAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK\nZXhlYyAyPiYxCgpzY3JpcHRfZGlyPSIkKCBjZCAiJCggZGlybmFtZSAiJHtCQVNIX1NPVVJDRVsw\nXX0iICkiID4vZGV2L251bGwgMj4mMSAmJiBwd2QgKSIKZWNobyAic2NyaXB0X2RpciA9ICRzY3Jp\ncHRfZGlyIgoKbWRzPSIkMSIKbl9vc3M9IiQyIgpzdG9yYWdlX2FjY291bnQ9IiQzIiAKc3RvcmFn\nZV9zYXM9IiQ0IgpzdG9yYWdlX2NvbnRhaW5lcj0iJDUiCmxvZ19hbmFseXRpY3NfbmFtZT0iJDYi\nCmxvZ19hbmFseXRpY3Nfd29ya3NwYWNlX2lkPSIkNyIKbG9nX2FuYWx5dGljc19rZXk9IiQ4Igpv\nc3NfZGlza19zZXR1cD0iJDkiCgplY2hvIG1kcz0iJDEiCmVjaG8gbl9vc3M9IiQyIgplY2hvIHN0\nb3JhZ2VfYWNjb3VudD0iJDMiIAplY2hvIHN0b3JhZ2Vfc2FzPSIkezQvc2lnPSovc2lnPVJFREFD\nVEVEfSIKZWNobyBzdG9yYWdlX2NvbnRhaW5lcj0iJDUiCmVjaG8gbG9nX2FuYWx5dGljc19uYW1l\nPSIkNiIKZWNobyBsb2dfYW5hbHl0aWNzX3dvcmtzcGFjZV9pZD0iJDciCmVjaG8gbG9nX2FuYWx5\ndGljc19rZXk9IiQ4IgplY2hvIG9zc19kaXNrX3NldHVwPSIkOSIKCgojIHZhcnMgdXNlZCBpbiBz\nY3JpcHQKaWYgWyAtZSAvZGV2L252bWUwbjEgXTsgdGhlbgoJZGV2aWNlcz0nL2Rldi9udm1lKm4x\nJwoJbl9kZXZpY2VzPSQoZWNobyAkZGV2aWNlcyB8IHdjIC13KQoJZWNobyAiVXNpbmcgJG5fZGV2\naWNlcyBOVk1FIGRldmljZXMiCmVsaWYgWyAtZSAvZGV2L3NkYyBdOyB0aGVuCglkZXZpY2VzPScv\nZGV2L3NkW2MtbV0nCgluX2RldmljZXM9JChlY2hvICRkZXZpY2VzIHwgd2MgLXcpCgllY2hvICJV\nc2luZyAkbl9kZXZpY2VzIE5WTUUgZGV2aWNlcyIKZWxzZQoJZWNobyAiRVJST1I6IGNhbm5vdCBm\naW5kIGRldmljZXMgZm9yIHN0b3JhZ2UiCglleGl0IDEKZmkKCmx1c3RyZV92ZXJzaW9uPTIuMTIu\nNQoKaWYgWyAiJHN0b3JhZ2VfYWNjb3VudCIgPSAiIiBdOyB0aGVuCgl1c2VfaHNtPWZhbHNlCmVs\nc2UKCXVzZV9oc209dHJ1ZQpmaQoKaWYgWyAiJGxvZ19hbmFseXRpY3NfbmFtZSIgPSAiIiBdOyB0\naGVuCgl1c2VfbG9nX2FuYWx5dGljcz1mYWxzZQplbHNlCgl1c2VfbG9nX2FuYWx5dGljcz10cnVl\nCmZpCgppZiBbWyAiJG5fZGV2aWNlcyIgLWd0ICIxIiAmJiAoICIkb3NzX2Rpc2tfc2V0dXAiID0g\nInJhaWQiIHx8ICIkSE9TVE5BTUUiID0gIiRtZHMiICkgXV07IHRoZW4KCWRldmljZT0vZGV2L21k\nMTAKCWVjaG8gImNyZWF0aW5nIHJhaWQgKCRkZXZpY2UpIGZyb20gJG5fZGV2aWNlcyBkZXZpY2Vz\nIDogJGRldmljZXMiCgkkc2NyaXB0X2Rpci9jcmVhdGVfcmFpZDAuc2ggJGRldmljZSAkZGV2aWNl\ncwoJZGV2aWNlcz0kZGV2aWNlCgluX2RldmljZXM9MQpmaQoKZWNobyAidXNpbmcgJG5fZGV2aWNl\ncyBkZXZpY2UocykgOiAkZGV2aWNlcyIKCm9zdF9pbmRleD0xCgppZiBbICIkSE9TVE5BTUUiID0g\nIiRtZHMiIF07IHRoZW4KCgkjIFNFVFVQIE1EUwoJJHNjcmlwdF9kaXIvbGZzbWFzdGVyLnNoICRk\nZXZpY2VzICRuX29zcwoKZWxzZQoKCWVjaG8gIndhaXQgZm9yIHRoZSBtZHMgdG8gc3RhcnQiCglt\nb2Rwcm9iZSBsdXN0cmUKCXdoaWxlICEgbGN0bCBwaW5nICRtZHNAdGNwOyBkbwoJCXNsZWVwIDIK\nCWRvbmUKCgoJaWR4PTAKCWZvciBjIGluICQoZWNobyAke0hPU1ROQU1FIyMkbWRzfSB8IGdyZXAg\nLW8gLik7IGRvCgkJZWNobyAkYwkJCgkJaWR4PSQoKCRpZHggKiAzNikpCgkJaWYgWyAteiAiJHtj\nIyNbMC05XX0iIF07IHRoZW4KCQkJaWR4PSQoKCRpZHggKyAkYykpCgkJZWxzZQoJCQlpZHg9JCgo\nJChwcmludGYgIiRpZHggKyAxMCArICVkIC0gJWQiICInJHtjXl59IiAiJ0EiKSkpCgkJZmkKCWRv\nbmUKCQoJb3N0X2luZGV4PSQoKCAoICRpZHggKiAkbl9kZXZpY2VzICkgKyAxICkpCgoJZWNobyAi\nc3RhcnRpbmcgb3N0IGluZGV4PSRvc3RfaW5kZXgiCgoJbWRzX2lwPSQocGluZyAtYyAxICRtZHMg\nfCBoZWFkIC0xIHwgc2VkICdzL15bXildKigvL2c7cy8pLiokLy9nJykKCgkkc2NyaXB0X2Rpci9s\nZnNvc3Muc2ggJG1kc19pcCAiJGRldmljZXMiICRvc3RfaW5kZXgKCmZpCgppZiBbICIke3VzZV9o\nc20sLH0iID0gInRydWUiIF07IHRoZW4KCglpZiBbICIkSE9TVE5BTUUiID0gIiRtZHMiIF07IHRo\nZW4KCgkJIyBJTVBPUlQgQ09OVEFJTkVSIChzbyBtb3VudCBsdXN0cmUgb24gdGhlIG1kcyB0byBp\nbXBvcnQpCgkJbWtkaXIgL2x1c3RyZQoJCW1vdW50IC10IGx1c3RyZSAke21kc31AdGNwMDovTHVz\ndHJlRlMgL2x1c3RyZQoJCWNobW9kIDc3NyAvbHVzdHJlCgoJCSRzY3JpcHRfZGlyL2xmc2ltcG9y\ndC5zaCAiJHN0b3JhZ2VfYWNjb3VudCIgIiRzdG9yYWdlX3NhcyIgIiRzdG9yYWdlX2NvbnRhaW5l\nciIgL2x1c3RyZQoKCWVsc2UKCgkJJHNjcmlwdF9kaXIvbGZzaHNtLnNoICIkbWRzIiAiJHN0b3Jh\nZ2VfYWNjb3VudCIgIiRzdG9yYWdlX3NhcyIgIiRzdG9yYWdlX2NvbnRhaW5lciIKCglmaQoKZmkK\nCmlmIFsgIiR7dXNlX2xvZ19hbmFseXRpY3MsLH0iID0gInRydWUiIF07IHRoZW4KCgkkc2NyaXB0\nX2Rpci9sZnNsb2dhbmFseXRpY3Muc2ggJGxvZ19hbmFseXRpY3NfbmFtZSAkbG9nX2FuYWx5dGlj\nc193b3Jrc3BhY2VfaWQgIiRsb2dfYW5hbHl0aWNzX2tleSIKCmZpAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4vbGZzb3Nz\nLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwNzc1ADAwMDE3NTAAMDAwMTc1\nMAAwMDAwMDAwMTEyNAAxNDExNTcwNDE2MgAwMTE1NTAAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyEvYmluL2Jh\nc2gKCiMgYXJnOiAkMSA9IGxmc21hc3RlcgojIGFyZzogJDIgPSBkZXZpY2UgKGUuZy4gTD0vZGV2\nL3NkYiBMdjI9L2Rldi9udm1lMG4xKQojIGFyZzogJDMgPSBzdGFydCBpbmRleAptYXN0ZXI9JDEK\nZGV2aWNlcz0kMgppbmRleD0kMwoKbmRldmljZXM9JCh3YyAtdyA8PDwkZGV2aWNlcykKCmZvciBk\nZXZpY2UgaW4gJGRldmljZXM7IGRvCgogICAgbWtmcy5sdXN0cmUgXAogICAgICAgIC0tZnNuYW1l\nPUx1c3RyZUZTIFwKICAgICAgICAtLWJhY2tmc3R5cGU9bGRpc2tmcyBcCiAgICAgICAgLS1yZWZv\ncm1hdCBcCiAgICAgICAgLS1vc3QgXAogICAgICAgIC0tbWdzbm9kZT0kbWFzdGVyIFwKICAgICAg\nICAtLWluZGV4PSRpbmRleCBcCiAgICAgICAgLS1tb3VudGZzb3B0aW9ucz0iZXJyb3JzPXJlbW91\nbnQtcm8iIFwKICAgICAgICAkZGV2aWNlCgogICAgbWtkaXIgL21udC9vc3Mke2luZGV4fQogICAg\nZWNobyAiJGRldmljZSAvbW50L29zcyR7aW5kZXh9IGx1c3RyZSBub2F0aW1lLG5vZGlyYXRpbWUs\nbm9iYXJyaWVyIDAgMiIgPj4gL2V0Yy9mc3RhYgoKICAgIGluZGV4PSQoKCAkaW5kZXggKyAxICkp\nCgpkb25lCgptb3VudCAtYQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4vbGZzbG9nYW5h\nbHl0aWNzLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwNzc1ADAwMDE3NTAAMDAwMTc1MAAw\nMDAwMDAwMTM3NwAxNDExNTcwNDE2MgAwMTM0NDcAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyEvYmluL2Jhc2gK\nCiMgYXJnOiAkMSA9IG5hbWUKIyBhcmc6ICQyID0gbG9nIGFuYWx5dGljcyB3b3Jrc3BhY2UgaWQK\nIyBhcmc6ICQzID0gbG9nIGFuYWx5dGljcyBrZXkKCm5hbWU9JDEKbG9nX2FuYWx5dGljc193b3Jr\nc3BhY2VfaWQ9JDIKbG9nX2FuYWx5dGljc19rZXk9JDMKCkRJUj0iJCggY2QgIiQoIGRpcm5hbWUg\nIiR7QkFTSF9TT1VSQ0VbMF19IiApIiAmJiBwd2QgKSIKCnNlZCAicyNfX0ZTX05BTUVfXyMke25h\nbWV9I2c7cyNfX0xPR19BTkFMWVRJQ1NfV09SS1NQQUNFX0lEX18jJHtsb2dfYW5hbHl0aWNzX3dv\ncmtzcGFjZV9pZH0jZztzI19fTE9HX0FOQUxZVElDU19LRVlfXyMke2xvZ19hbmFseXRpY3Nfa2V5\nfSNnIiAgJERJUi9sZnNsb2dhbmFseXRpY3NkLnNoLmluID4vdXNyL2Jpbi9sZnNsb2dhbmFseXRp\nY3NkLnNoCgpjaG1vZCAreCAvdXNyL2Jpbi9sZnNsb2dhbmFseXRpY3NkLnNoCgpjYXQgPDxFT0Yg\nPi9saWIvc3lzdGVtZC9zeXN0ZW0vbGZzbG9nYW5hbHl0aWNzLnNlcnZpY2UKW1VuaXRdCkRlc2Ny\naXB0aW9uPUx1c3RyZSBsb2dnaW5nIHNlcnZpY2UgdG8gTG9nIEFuYWx5dGljcy4KCltTZXJ2aWNl\nXQpUeXBlPXNpbXBsZQpFeGVjU3RhcnQ9L2Jpbi9iYXNoIC91c3IvYmluL2xmc2xvZ2FuYWx5dGlj\nc2Quc2gKUmVzdGFydD1hbHdheXMKCltJbnN0YWxsXQpXYW50ZWRCeT1tdWx0aS11c2VyLnRhcmdl\ndApFT0YKCnN5c3RlbWN0bCBlbmFibGUgbGZzbG9nYW5hbHl0aWNzCnN5c3RlbWN0bCBzdGFydCBs\nZnNsb2dhbmFseXRpY3MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4vZml4X2x2Ml9uZXR3\nb3JrLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwNzc1ADAwMDE3NTAAMDAwMTc1MAAwMDAw\nMDAwMDEyMQAxNDExNTcwNDE2MgAwMTMzNTUAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBh\ndWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyEvYmluL2Jhc2gKCmV0\naHRvb2wgLUwgZXRoMSB0eCA4IHJ4IDggJiYgaWZjb25maWcgZXRoMSBkb3duICYmIGlmY29uZmln\nIGV0aDEgdXAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2xmc21hc3Rlci5zaAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc3NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAw\nMDEzMDIAMTQxMTU3MDc0NDYAMDEyMjQ1ACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVs\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNoCgojIGFy\nZzogJDEgPSBkZXZpY2UgKGUuZy4gTD0vZGV2L3NkYiBMdjI9L2Rldi9udm1lMG4xKQpkZXZpY2U9\nJDEKbnVtX29zcz0kMgojIGRlZmF1bHQgb2YgMyBjb25jdXJyZW50IGhzbSByZXF1ZXN0cyBwZXIg\nb3NzCnJlcXNfcGVyX29zcz0kezM6LTN9Cgpta2ZzLmx1c3RyZSAtLWZzbmFtZT1MdXN0cmVGUyAt\nLW1ncyAtLW1kdCAtLW1vdW50ZnNvcHRpb25zPSJ1c2VyX3hhdHRyLGVycm9ycz1yZW1vdW50LXJv\nIiAtLWJhY2tmc3R5cGU9bGRpc2tmcyAtLXJlZm9ybWF0ICRkZXZpY2UgLS1pbmRleCAwIHx8IGV4\naXQgMQoKbWtkaXIgL21udC9tZ3NtZHMKZWNobyAiJGRldmljZSAvbW50L21nc21kcyBsdXN0cmUg\nbm9hdGltZSxub2RpcmF0aW1lLG5vYmFycmllciAwIDIiID4+IC9ldGMvZnN0YWIKbW91bnQgLWEK\nCiMgc2V0IHVwIGhzbQpsY3RsIHNldF9wYXJhbSAtUCBtZHQuKi1NRFQwMDAwLmhzbV9jb250cm9s\nPWVuYWJsZWQKbGN0bCBzZXRfcGFyYW0gLVAgbWR0LiotTURUMDAwMC5oc20uZGVmYXVsdF9hcmNo\naXZlX2lkPTEKbGN0bCBzZXRfcGFyYW0gbWR0LiotTURUMDAwMC5oc20ubWF4X3JlcXVlc3RzPSQo\nKCRudW1fb3NzICogJHJlcXNfcGVyX29zcykpCgojIGFsbG93IGFueSB1c2VyIGFuZCBncm91cCBp\nZHMgdG8gd3JpdGUKbGN0bCBzZXRfcGFyYW0gbWR0LiotTURUMDAwMC5pZGVudGl0eV91cGNhbGw9\nTk9ORQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2xmc2hzbS5zaAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc3NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDM0\nMTcAMTQxMTYxNTM1NTYAMDExNTUwACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNoCgojIGFyZzog\nJDEgPSBsZnNzZXJ2ZXIKIyBhcmc6ICQyID0gc3RvcmFnZSBhY2NvdW50CiMgYXJnOiAkMyA9IHN0\nb3JhZ2Uga2V5CiMgYXJnOiAkNCA9IHN0b3JhZ2UgY29udGFpbmVyCm1hc3Rlcj0iJDEiCnN0b3Jh\nZ2VfYWNjb3VudD0iJDIiCnN0b3JhZ2Vfc2FzPSIkMyIKc3RvcmFnZV9jb250YWluZXI9IiQ0IgoK\naWYgISBycG0gLXEgbGVtdXItYXp1cmUtaHNtLWFnZW50IGxlbXVyLWF6dXJlLWRhdGEtbW92ZXJz\nOyB0aGVuCiAgICB5dW0gLXkgaW5zdGFsbCBcCiAgICAgICAgaHR0cHM6Ly9henVyZWhwYy5henVy\nZWVkZ2UubmV0L3JwbXMvbGVtdXItYXp1cmUtaHNtLWFnZW50LTIuMC4wLWx1c3RyZV8yLjEyLng4\nNl82NC5ycG0gXAogICAgICAgIGh0dHBzOi8vYXp1cmVocGMuYXp1cmVlZGdlLm5ldC9ycG1zL2xl\nbXVyLWF6dXJlLWRhdGEtbW92ZXJzLTIuMC4wLWx1c3RyZV8yLjEyLng4Nl82NC5ycG0KZmkKCm1r\nZGlyIC1wIC92YXIvcnVuL2xoc21kCmNobW9kIDc1NSAvdmFyL3J1bi9saHNtZAoKbWtkaXIgLXAg\nL2V0Yy9saHNtZApjaG1vZCA3NTUgL2V0Yy9saHNtZAoKY2F0IDw8RU9GID4vZXRjL2xoc21kL2Fn\nZW50CiMgTHVzdHJlIE5JRCBhbmQgZmlsZXN5c3RlbSBuYW1lIGZvciB0aGUgZnJvbnQgZW5kIGZp\nbGVzeXN0ZW0sIHRoZSBhZ2VudCB3aWxsIG1vdW50IHRoaXMKY2xpZW50X2RldmljZT0iJHttYXN0\nZXJ9QHRjcDovTHVzdHJlRlMiCgojIERvIHlvdSB3YW50IHRvIHVzZSBTMyBhbmQgUE9TSVgsIGlu\nIHRoaXMgZXhhbXBsZSB3ZSB1c2UgUE9TSVgKZW5hYmxlZF9wbHVnaW5zPVsibGhzbS1wbHVnaW4t\nYXoiXQoKIyMgRGlyZWN0b3J5IHRvIGxvb2sgZm9yIHRoZSBwbHVnaW5zCnBsdWdpbl9kaXI9Ii91\nc3IvbGliZXhlYy9saHNtZCIKCiMgVEJELCBJIHVzZWQgMTYKaGFuZGxlcl9jb3VudD0xNgoKIyBU\nQkQKc25hcHNob3RzIHsKICAgICAgICBlbmFibGVkID0gZmFsc2UKfQpFT0YKY2htb2QgNjAwIC9l\ndGMvbGhzbWQvYWdlbnQKCmNhdCA8PEVPRiA+L2V0Yy9saHNtZC9saHNtLXBsdWdpbi1hegpudW1f\ndGhyZWFkcz0xNgphel9zdG9yYWdlX2FjY291bnQ9IiRzdG9yYWdlX2FjY291bnQiCmF6X3N0b3Jh\nZ2Vfc2FzPSI/JHN0b3JhZ2Vfc2FzIgphel9rdl9uYW1lPSIiCmF6X2t2X3NlY3JldF9uYW1lPSIi\nCmJhbmR3aWR0aD0wCmV4cG9ydHByZWZpeD0iIgphcmNoaXZlICJhcmNoaXZlMSIgewogICAgaWQ9\nMQogICAgbnVtX3RocmVhZHM9MTYKICAgIHJvb3Q9IiIKICAgIGNvbXByZXNzaW9uPSJvZmYiCiAg\nICBjb250YWluZXI9IiRzdG9yYWdlX2NvbnRhaW5lciIKfQpFT0YKY2htb2QgNjAwIC9ldGMvbGhz\nbWQvbGhzbS1wbHVnaW4tYXoKCmNhdCA8PEVPRiA+L2V0Yy9zeXN0ZW1kL3N5c3RlbS9saHNtZC5z\nZXJ2aWNlCltVbml0XQpEZXNjcmlwdGlvbj1UaGUgbGhzbWQgc2VydmVyCkFmdGVyPXN5c2xvZy50\nYXJnZXQgbmV0d29yay50YXJnZXQgcmVtb3RlLWZzLnRhcmdldCBuc3MtbG9va3VwLnRhcmdldAoK\nW1NlcnZpY2VdClR5cGU9c2ltcGxlClBJREZpbGU9L3J1bi9saHNtZC5waWQKRXhlY1N0YXJ0UHJl\nPS9iaW4vbWtkaXIgLXAgL3Zhci9ydW4vbGhzbWQKRXhlY1N0YXJ0PS9zYmluL2xoc21kIC1jb25m\naWcgL2V0Yy9saHNtZC9hZ2VudApSZXN0YXJ0PWFsd2F5cwoKW0luc3RhbGxdCldhbnRlZEJ5PW11\nbHRpLXVzZXIudGFyZ2V0CkVPRgpjaG1vZCA2MDAgL2V0Yy9zeXN0ZW1kL3N5c3RlbS9saHNtZC5z\nZXJ2aWNlCgpzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZApzeXN0ZW1jdGwgZW5hYmxlIGxoc21kCnN5\nc3RlbWN0bCBzdGFydCBsaHNtZAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALi9sZnNpbXBvcnQuc2gAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA3NzUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAxMjIyADE0\nMTE1NzA3NTE3ADAxMjI2NAAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIS9iaW4vYmFzaAoKIyBhcmc6ICQxID0g\nc3RvcmFnZSBhY2NvdW50CiMgYXJnOiAkMiA9IHN0b3JhZ2Ugc2FzCiMgYXJnOiAkMyA9IHN0b3Jh\nZ2UgY29udGFpbmVyCiMgYXJnOiAkMyA9IGxmcyBtb3VudAojIGFyZzogJDQgPSBsdXN0cmUgbW91\nbnQgKGRlZmF1bHQ9L2x1c3RyZSkKc3RvcmFnZV9hY2NvdW50PSIkMSIKc3RvcmFnZV9zYXM9IiQy\nIgpzdG9yYWdlX2NvbnRhaW5lcj0iJDMiCmxmc19tb3VudD0kezQ6LS9sdXN0cmV9CgppZiAhIHJw\nbSAtcSBsZW11ci1henVyZS1oc20tYWdlbnQgbGVtdXItYXp1cmUtZGF0YS1tb3ZlcnM7IHRoZW4K\nICAgIHl1bSAteSBpbnN0YWxsIFwKICAgICAgICBodHRwczovL2F6dXJlaHBjLmF6dXJlZWRnZS5u\nZXQvcnBtcy9sZW11ci1henVyZS1oc20tYWdlbnQtMi4wLjAtbHVzdHJlXzIuMTIueDg2XzY0LnJw\nbSBcCiAgICAgICAgaHR0cHM6Ly9henVyZWhwYy5henVyZWVkZ2UubmV0L3JwbXMvbGVtdXItYXp1\ncmUtZGF0YS1tb3ZlcnMtMi4wLjAtbHVzdHJlXzIuMTIueDg2XzY0LnJwbQpmaQoKY2QgJGxmc19t\nb3VudApleHBvcnQgU1RPUkFHRV9TQVM9Ij8kc3RvcmFnZV9zYXMiCi9zYmluL2F6dXJlLWltcG9y\ndCAtYWNjb3VudCAke3N0b3JhZ2VfYWNjb3VudH0gLWNvbnRhaW5lciAke3N0b3JhZ2VfY29udGFp\nbmVyfQoKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALi9jcmVhdGVfcmFpZDAuc2gAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAADAwMDA3NzUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAxNjYwADE0MTE1\nNzA0MTYyADAxMjU2NgAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIS9iaW4vYmFzaAoKIyBhcmc6ICQxID0gcmFp\nZF9kZXZpY2UgKGUuZy4gL2Rldi9tZDEwKQojIGFyZzogJCogPSBkZXZpY2VzIHRvIHVzZSAoY2Fu\nIHVzZSBnbG9iYmluZykKCnJhaWRfZGV2aWNlPSQxCnNoaWZ0CgpkZXZpY2VzPQp3aGlsZSAoKCAi\nJCMiICkpOyBkbwogICAgZGV2aWNlcz0iJGRldmljZXMgJDEiCiAgICBzaGlmdApkb25lCgplY2hv\nICJkZXZpY2VzPSRkZXZpY2VzIgoKIyBwcmludCBwYXJ0aXRpb24gaW5mb3JtYXRpb24KcGFydGVk\nIC1zIC0tbGlzdCAyPi9kZXYvbnVsbAoKIyBjcmVhdGluZyB0aGUgcGFydGl0aW9ucwpmb3IgZGlz\nayBpbiAkZGV2aWNlczsgZG8KICAgIGVjaG8gInBhcnRpdGlvbmluZyAkZGlzayIKICAgIHBhcnRl\nZCAtcyAkZGlzayAibWtsYWJlbCBncHQiCiAgICBwYXJ0ZWQgLXMgJGRpc2sgLWEgb3B0aW1hbCAi\nbWtwYXJ0IHByaW1hcnkgMSAtMSIKICAgIHBhcnRlZCAtcyAkZGlzayBwcmludAogICAgcGFydGVk\nIC1zICRkaXNrICJzZXQgMSByYWlkIG9uIgpkb25lCgojIG1ha2Ugc3VyZSBhbGwgdGhlIHBhcnRp\ndGlvbnMgYXJlIHJlYWR5CnNsZWVwIDEwCiMgZ2V0IHRoZSBwYXJ0aXRpb24gbmFtZXMKcGFydGl0\naW9ucz0KZm9yIGRpc2sgaW4gJGRldmljZXM7IGRvCiAgICBwYXJ0aXRpb25zPSIkcGFydGl0aW9u\ncyAkKGxzYmxrIC1ubyBrbmFtZSAtcCAkZGlzayB8IHRhaWwgLW4xKSIKZG9uZQplY2hvICJwYXJ0\naXRpb25zPSRwYXJ0aXRpb25zIgoKbmRldmljZXM9JChlY2hvICRwYXJ0aXRpb25zIHwgd2MgLXcp\nCgplY2hvICJjcmVhdGluZyByYWlkIGRldmljZSIKbWRhZG0gLS1jcmVhdGUgJHJhaWRfZGV2aWNl\nIC0tbGV2ZWwgMCAtLXJhaWQtZGV2aWNlcyAkbmRldmljZXMgJHBhcnRpdGlvbnMgfHwgZXhpdCAx\nCnNsZWVwIDEwCgptZGFkbSAtLXZlcmJvc2UgLS1kZXRhaWwgLS1zY2FuID4gL2V0Yy9tZGFkbS5j\nb25mCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALi9sZnNsb2dhbmFseXRpY3NkLnNoLmluAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAADAwMDA2NjQAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAzNjA2ADE0MTE1NzA0\nMTYyADAxNDIxMgAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1\nc3RhciAgAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIS9iaW4vYmFzaAoKZnNfbmFtZT1fX0ZTX05BTUVf\nXwp3b3Jrc3BhY2VfaWQ9X19MT0dfQU5BTFlUSUNTX1dPUktTUEFDRV9JRF9fCmtleT0iX19MT0df\nQU5BTFlUSUNTX0tFWV9fIgoKREFURT1gZGF0ZSAnKyVZLSVtLSVkICVIOiVNOiVTJ2AKZWNobyAi\nTHVzdHJlIExvZyBBbmFseXRpY3Mgc2VydmljZSBzdGFydGVkIGF0ICR7REFURX0iIHwgc3lzdGVt\nZC1jYXQgLXAgaW5mbwoKbWU9JChob3N0bmFtZSkKbm9kZT0kKGxzIC9wcm9jL2ZzL2x1c3RyZS9v\nc2QtbGRpc2tmcyB8IGdyZXAgTHVzdHJlRlMpCgpldGgwPSQoZ3JlcCBldGgwIC9wcm9jL25ldC9k\nZXYgfCBzZWQgJ3MvICAqLyAvZycpCmJ5dGVzcmVjdl9sYXN0PSQoY3V0IC1kJyAnIC1mIDMgPDw8\nIiRldGgwIikKYnl0ZXNzZW5kX2xhc3Q9JChjdXQgLWQnICcgLWYgMTEgPDw8IiRldGgwIikKCndo\naWxlIHRydWUKZG8KICAgIHNsZWVwIDYwOwoKICAgIGV0aDA9JChncmVwIGV0aDAgL3Byb2MvbmV0\nL2RldiB8IHNlZCAncy8gICovIC9nJykKICAgIGJ5dGVzcmVjdj0kKGN1dCAtZCcgJyAtZiAzIDw8\nPCIkZXRoMCIpCiAgICBieXRlc3NlbmQ9JChjdXQgLWQnICcgLWYgMTEgPDw8IiRldGgwIikKICAg\nIGJ5dGVzcmVjdl9pbnQ9JCgoJGJ5dGVzcmVjdiAtICRieXRlc3JlY3ZfbGFzdCkpCiAgICBieXRl\nc3NlbmRfaW50PSQoKCRieXRlc3NlbmQgLSAkYnl0ZXNzZW5kX2xhc3QpKQogICAgYnl0ZXNyZWN2\nX2xhc3Q9JGJ5dGVzcmVjdgogICAgYnl0ZXNzZW5kX2xhc3Q9JGJ5dGVzc2VuZAoKICAgIGxvYWRh\ndmc9JChjdXQgLWYxIC1kJyAnIDwgL3Byb2MvbG9hZGF2ZykKICAgIGtieXRlc2ZyZWU9JCg8L3By\nb2MvZnMvbHVzdHJlL29zZC1sZGlza2ZzLyR7bm9kZX0va2J5dGVzZnJlZSkKCiAgICBjb250ZW50\nPSQoY2F0IDw8RU9GCnsKICAgICJmc25hbWUiOiIkZnNfbmFtZSIsCiAgICAiaG9zdG5hbWUiOiIk\nbWUiLAogICAgInV1aWQiOiIkbm9kZSIsCiAgICAibG9hZGF2ZyI6JGxvYWRhdmcsCiAgICAia2J5\ndGVzZnJlZSI6JGtieXRlc2ZyZWUsCiAgICAiYnl0ZXNzZW5kIjokYnl0ZXNzZW5kX2ludCwKICAg\nICJieXRlc3JlY3YiOiRieXRlc3JlY3ZfaW50Cn0KRU9GCiAgICApCgogICAgY29udGVudF9sZW49\nJHsjY29udGVudH0KCiAgICByZmMxMTIzZGF0ZT0iJChkYXRlIC11ICslYSxcICVkXCAlYlwgJVlc\nICVIOiVNOiVTXCBHTVQpIgoKICAgIHN0cmluZ190b19oYXNoPSJQT1NUXG4ke2NvbnRlbnRfbGVu\nfVxuYXBwbGljYXRpb24vanNvblxueC1tcy1kYXRlOiR7cmZjMTEyM2RhdGV9XG4vYXBpL2xvZ3Mi\nCiAgICB1dGY4X3RvX2hhc2g9JChlY2hvIC1uICIkc3RyaW5nX3RvX2hhc2giIHwgaWNvbnYgLXQg\ndXRmOCkKCiAgICBkZWNvZGVkX2hleF9rZXk9IiQoZWNobyAiJGtleSIgfCBiYXNlNjQgLS1kZWNv\nZGUgLS13cmFwPTAgfCB4eGQgLXAgLWMyNTYpIgogICAgc2lnbmF0dXJlPSIkKGVjaG8gLW5lICIk\ndXRmOF90b19oYXNoIiB8IG9wZW5zc2wgZGdzdCAtc2hhMjU2IC1tYWMgSE1BQyAtbWFjb3B0ICJo\nZXhrZXk6JGRlY29kZWRfaGV4X2tleSIgLWJpbmFyeSB8IGJhc2U2NCkiCiAgICBhdXRoX3Rva2Vu\nPSJTaGFyZWRLZXkgJHdvcmtzcGFjZV9pZDokc2lnbmF0dXJlIgoKICAgIGN1cmwgLXMgLVMgXAog\nICAgICAgIC1IICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iIFwKICAgICAgICAtSCAi\nTG9nLVR5cGU6ICRmc19uYW1lIiBcCiAgICAgICAgLUggIkF1dGhvcml6YXRpb246ICRhdXRoX3Rv\na2VuIiBcCiAgICAgICAgLUggIngtbXMtZGF0ZTogJHJmYzExMjNkYXRlIiBcCiAgICAgICAgLVgg\nUE9TVCBcCiAgICAgICAgLS1kYXRhICIkY29udGVudCIgXAogICAgICAgIGh0dHBzOi8vJHdvcmtz\ncGFjZV9pZC5vZHMub3BpbnNpZ2h0cy5henVyZS5jb20vYXBpL2xvZ3M/YXBpLXZlcnNpb249MjAx\nNi0wNC0wMQoKZG9uZQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4vY3JlYXRlX3JhaWQwLnNoAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAwMDAwNzc1ADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMDAwMAAxNDExNTcwNDE2MgAw\nMTU1NjMAIDEuL2NyZWF0ZV9yYWlkMC5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIg\nIABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAALi9maXhfbHYyX25ldHdvcmsuc2gAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAADAwMDA3NzUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAwMDAwADE0MTE1NzA0MTYyADAx\nNzE2MwAgMS4vZml4X2x2Ml9uZXR3b3JrLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAg\nAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2xmc2hzbS5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAMDAwMDc3NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDAwMDAAMTQxMTYxNTM1NTYAMDEz\nNTE1ACAxLi9sZnNoc20uc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAA\ncGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAC4vbGZzaW1wb3J0LnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAwMDAwNzc1ADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMDAwMAAxNDExNTcwNzUxNwAwMTQ3\nNjQAIDEuL2xmc2ltcG9ydC5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABw\nYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAALi9sZnNsb2dhbmFseXRpY3Muc2gAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAADAwMDA3NzUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAwMDAwADE0MTE1NzA0MTYyADAxNzMx\nMwAgMS4vbGZzbG9nYW5hbHl0aWNzLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAgAHBh\ndWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAuL2xmc2xvZ2FuYWx5dGljc2Quc2guaW4AAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAMDAwMDY2NAAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDAwMDAAMTQxMTU3MDQxNjIAMDIwNjMy\nACAxLi9sZnNsb2dhbmFseXRpY3NkLnNoLmluAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1\nbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAC4vbGZzbWFzdGVyLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAwMDAwNzc1ADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMDAwMAAxNDExNTcwNzQ0NgAwMTQ3MjcA\nIDEuL2xmc21hc3Rlci5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABwYXVs\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAALi9sZnNvc3Muc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nADAwMDA3NzUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAwMDAwADE0MTE1NzA0MTYyADAxMzU0MQAg\nMS4vbGZzb3NzLnNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAgAHBhdWwA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAuL3NldHVwX2x1c3RyZS5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nMDAwMDc3NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDAwMDAAMTQxMTYxNTIzMzAAMDE2MjA2ACAx\nLi9zZXR1cF9sdXN0cmUuc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n')]",
    "copy": [
      {
        "name": "mdtDataDisks",
        "count": "[parameters('mdtNumDisks')]",
        "input": {
          "caching": "[parameters('mdtCacheOption')]",
          "managedDisk": {
            "storageAccountType": "[parameters('mdtStorageSku')]"
          },
          "createOption": "Empty",
          "lun": "[copyIndex('mdtDataDisks')]",
          "diskSizeGB": "[parameters('mdtDiskSize')]"
        }
      },
      {
        "name": "ostDataDisks",
        "count": "[parameters('ostNumDisks')]",
        "input": {
          "caching": "[parameters('ostCacheOption')]",
          "managedDisk": {
            "storageAccountType": "[parameters('ostStorageSku')]"
          },
          "createOption": "Empty",
          "lun": "[copyIndex('ostDataDisks')]",
          "diskSizeGB": "[parameters('ostDiskSize')]"
        }
      }
    ]
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-03-01",
      "name": "[concat(parameters('name'), '-NetworkInterface')]",
      "location": "[parameters('location')]",
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "properties": {
        "enableAcceleratedNetworking": true,
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "plan": "[variables('imagePlan')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('name'), '-NetworkInterface'))]"
      ],
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('mdsSku')]"
        },
        "osProfile": {
          "computerName": "[parameters('name')]",
          "adminUsername": "[parameters('adminUser')]",
          "customData": "[base64(variables('ciScript'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUser'))]",
                  "keyData": "[parameters('rsaPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "dataDisks": "[variables('mdtDataDisks')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('name'), '-NetworkInterface'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2021-07-01",
      "name": "[concat(parameters('name'), '-vmss')]",
      "location": "[parameters('location')]",
      "plan": "[variables('imagePlan')]",
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "sku": {
        "name": "[parameters('ossSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": true,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": "[variables('imageReference')]",
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite"
            },
            "dataDisks": "[variables('ostDataDisks')]"
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('name')]",
            "adminUsername": "[parameters('adminUser')]",
            "customData": "[base64(variables('ciScript'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUser'))]",
                    "keyData": "[parameters('rsaPublicKey')]"
                  }
                ]
              }
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(parameters('name'), '-nic')]",
                "properties": {
                  "primary": true,
                  "enableAcceleratedNetworking": true,
                  "ipConfigurations": [
                    {
                      "name": "ipConfig-vmss",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnet')]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {}
}
